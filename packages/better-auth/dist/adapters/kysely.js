import{Kysely as I,MssqlDialect as P}from"kysely";import{MysqlDialect as N,PostgresDialect as U,SqliteDialect as S}from"kysely";function q(e){if(!e)return null;if("dialect"in e)return q(e.dialect);if("createDriver"in e){if(e instanceof S)return"sqlite";if(e instanceof N)return"mysql";if(e instanceof U)return"postgres";if(e instanceof P)return"mssql"}return"aggregate"in e?"sqlite":"getConnection"in e?"mysql":"connect"in e?"postgres":null}var B=async e=>{let i=e.database;if(!i)return{kysely:null,databaseType:null};if("db"in i)return{kysely:i.db,databaseType:i.type};if("dialect"in i)return{kysely:new I({dialect:i.dialect}),databaseType:i.type};let f,y=q(i);return"createDriver"in i&&(f=i),"aggregate"in i&&(f=new S({database:i})),"getConnection"in i&&(f=new N(i)),"connect"in i&&(f=new U({pool:i})),{kysely:f?new I({dialect:f}):null,databaseType:y}};import{z as d}from"zod";import{APIError as ie}from"better-call";var se=d.object({id:d.string(),providerId:d.string(),accountId:d.string(),name:d.string().nullish(),userId:d.string(),accessToken:d.string().nullish(),refreshToken:d.string().nullish(),idToken:d.string().nullish(),accessTokenExpiresAt:d.date().nullish(),refreshTokenExpiresAt:d.date().nullish(),scope:d.string().nullish(),password:d.string().nullish(),image:d.string().nullish(),createdAt:d.date().default(()=>new Date),updatedAt:d.date().default(()=>new Date)}),ae=d.object({id:d.string(),email:d.string().transform(e=>e.toLowerCase()),emailVerified:d.boolean().default(!1),name:d.string(),image:d.string().nullish(),createdAt:d.date().default(()=>new Date),updatedAt:d.date().default(()=>new Date)}),oe=d.object({id:d.string(),userId:d.string(),expiresAt:d.date(),createdAt:d.date().default(()=>new Date),updatedAt:d.date().default(()=>new Date),token:d.string(),ipAddress:d.string().nullish(),userAgent:d.string().nullish()}),de=d.object({id:d.string(),value:d.string(),createdAt:d.date().default(()=>new Date),updatedAt:d.date().default(()=>new Date),expiresAt:d.date(),identifier:d.string()});var k=Object.create(null),T=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?k:globalThis),L=new Proxy(k,{get(e,i){return T()[i]??k[i]},has(e,i){let f=T();return i in f||i in k},set(e,i,f){let y=T(!0);return y[i]=f,!0},deleteProperty(e,i){if(!i)return!1;let f=T(!0);return delete f[i],!0},ownKeys(){let e=T(!0);return Object.keys(e)}});function V(e){return e?e!=="false":!1}var M=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var _=M==="test"||V(L.TEST);import{createRandomStringGenerator as C}from"@better-auth/utils/random";var R=e=>C("a-z","A-Z","0-9")(e||32);import{z as ot}from"zod";import{APIError as ut}from"better-call";import{createHash as $e}from"@better-auth/utils/hash";import{xchacha20poly1305 as We}from"@noble/ciphers/chacha";import{bytesToHex as ze,hexToBytes as Ge,utf8ToBytes as Ze}from"@noble/ciphers/utils";import{managedNonce as Xe}from"@noble/ciphers/webcrypto";import{createHash as De}from"@better-auth/utils/hash";import{SignJWT as Ue}from"jose";import{scryptAsync as Le}from"@noble/hashes/scrypt";import{getRandomValues as Pe}from"uncrypto";import{hex as Me}from"@better-auth/utils/hex";import{createRandomStringGenerator as $}from"@better-auth/utils/random";var K=$("a-z","0-9","A-Z","-_");var O=["info","success","warn","error","debug"];function W(e,i){return O.indexOf(i)<=O.indexOf(e)}var w={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},J={info:w.fg.blue,success:w.fg.green,warn:w.fg.yellow,error:w.fg.red,debug:w.fg.magenta},z=(e,i)=>{let f=new Date().toISOString();return`${w.dim}${f}${w.reset} ${J[e]}${e.toUpperCase()}${w.reset} ${w.bright}[Better Auth]:${w.reset} ${i}`},E=e=>{let i=e?.disabled!==!0,f=e?.level??"error",y=(g,x,A=[])=>{if(!i||!W(f,g))return;let h=z(g,x);if(!e||typeof e.log!="function"){g==="error"?console.error(h,...A):g==="warn"?console.warn(h,...A):console.log(h,...A);return}e.log(g==="success"?"info":g,h,...A)};return Object.fromEntries(O.map(g=>[g,(...[x,...A])=>y(g,x,A)]))},G=E();var v=e=>{let i=e.plugins?.reduce((b,n)=>{let r=n.schema;if(!r)return b;for(let[s,u]of Object.entries(r))b[s]={fields:{...b[s]?.fields,...u.fields},modelName:u.modelName||s};return b},{}),f=e.rateLimit?.storage==="database",y={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:g,session:x,account:A,...h}=i||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...g?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...x?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...A?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...h,...f?y:{}}};import{z as Vt}from"zod";function D(e,i,f){return f==="update"?e:e==null&&i.defaultValue?typeof i.defaultValue=="function"?i.defaultValue():i.defaultValue:e}var Q=(e,i,f)=>{let y=v(i);function g(n,r){if(r==="id")return r;let s=y[n].fields[r];return s||console.log("Field not found",n,r),s.fieldName||r}function x(n,r,s){let{type:u="sqlite"}=f||{},o=y[r].fields[s];return o.type==="boolean"&&u==="sqlite"&&n!==null&&n!==void 0?n?1:0:o.type==="date"&&n&&n instanceof Date&&u==="sqlite"?n.toISOString():n}function A(n,r,s){let{type:u="sqlite"}=f||{},o=y[r].fields[s];return o.type==="boolean"&&u==="sqlite"&&n!==null?n===1:o.type==="date"&&n?new Date(n):n}function h(n){return y[n].modelName}let b=i?.advanced?.generateId===!1;return{transformInput(n,r,s){let u=b||s==="update"?{}:{id:i.advanced?.generateId?i.advanced.generateId({model:r}):n.id||R()},o=y[r].fields;for(let t in o){let a=n[t];u[o[t].fieldName||t]=D(x(a,r,t),o[t],s)}return u},transformOutput(n,r,s=[]){if(!n)return null;let u=n.id?s.length===0||s.includes("id")?{id:n.id}:{}:{},o=y[r].fields;for(let t in o){if(s.length&&!s.includes(t))continue;let a=o[t];a&&(u[t]=A(n[a.fieldName||t],r,t))}return u},convertWhereClause(n,r){if(!r)return{and:null,or:null};let s={and:[],or:[]};return r.forEach(u=>{let{field:o,value:t,operator:a="=",connector:c="AND"}=u,l=g(n,o),m=p=>a.toLowerCase()==="in"?p(l,"in",Array.isArray(t)?t:[t]):a==="contains"?p(l,"like",`%${t}%`):a==="starts_with"?p(l,"like",`${t}%`):a==="ends_with"?p(l,"like",`%${t}`):a==="eq"?p(l,"=",t):a==="ne"?p(l,"<>",t):a==="gt"?p(l,">",t):a==="gte"?p(l,">=",t):a==="lt"?p(l,"<",t):a==="lte"?p(l,"<=",t):p(l,a,t);c==="OR"?s.or.push(m):s.and.push(m)}),{and:s.and.length?s.and:null,or:s.or.length?s.or:null}},async withReturning(n,r,s,u){let o;if(f?.type!=="mysql")o=await r.returningAll().executeTakeFirst();else{await r.execute();let t=n.id?"id":u[0].field?u[0].field:"id",a=n[t]||u[0].value;o=await e.selectFrom(h(s)).selectAll().where(g(s,t),"=",a).executeTakeFirst()}return o},getModelName:h,getField:g}},Z=(e,i)=>f=>{let{transformInput:y,withReturning:g,transformOutput:x,convertWhereClause:A,getModelName:h,getField:b}=Q(e,f,i);return{id:"kysely",async create(n){let{model:r,data:s,select:u}=n,o=y(s,r,"create"),t=e.insertInto(h(r)).values(o);return x(await g(o,t,r,[]),r,u)},async findOne(n){let{model:r,where:s,select:u}=n,{and:o,or:t}=A(r,s),a=e.selectFrom(h(r)).selectAll();o&&(a=a.where(l=>l.and(o.map(m=>m(l))))),t&&(a=a.where(l=>l.or(t.map(m=>m(l)))));let c=await a.executeTakeFirst();return c?x(c,r,u):null},async findMany(n){let{model:r,where:s,limit:u,offset:o,sortBy:t}=n,{and:a,or:c}=A(r,s),l=e.selectFrom(h(r));a&&(l=l.where(p=>p.and(a.map(F=>F(p))))),c&&(l=l.where(p=>p.or(c.map(F=>F(p))))),l=l.limit(u||100),o&&(l=l.offset(o)),t&&(l=l.orderBy(b(r,t.field),t.direction));let m=await l.selectAll().execute();return m?m.map(p=>x(p,r)):[]},async update(n){let{model:r,where:s,update:u}=n,{and:o,or:t}=A(r,s),a=y(u,r,"update"),c=e.updateTable(h(r)).set(a);return o&&(c=c.where(m=>m.and(o.map(p=>p(m))))),t&&(c=c.where(m=>m.or(t.map(p=>p(m))))),await x(await g(a,c,r,s),r)},async updateMany(n){let{model:r,where:s,update:u}=n,{and:o,or:t}=A(r,s),a=y(u,r,"update"),c=e.updateTable(h(r)).set(a);return o&&(c=c.where(m=>m.and(o.map(p=>p(m))))),t&&(c=c.where(m=>m.or(t.map(p=>p(m))))),(await c.execute()).length},async count(n){let{model:r,where:s}=n,{and:u,or:o}=A(r,s),t=e.selectFrom(h(r)).selectAll();return u&&(t=t.where(c=>c.and(u.map(l=>l(c))))),o&&(t=t.where(c=>c.or(o.map(l=>l(c))))),(await t.execute()).length},async delete(n){let{model:r,where:s}=n,{and:u,or:o}=A(r,s),t=e.deleteFrom(h(r));u&&(t=t.where(a=>a.and(u.map(c=>c(a))))),o&&(t=t.where(a=>a.or(o.map(c=>c(a))))),await t.execute()},async deleteMany(n){let{model:r,where:s}=n,{and:u,or:o}=A(r,s),t=e.deleteFrom(h(r));return u&&(t=t.where(a=>a.and(u.map(c=>c(a))))),o&&(t=t.where(a=>a.or(o.map(c=>c(a))))),(await t.execute()).length},options:i}};export{B as createKyselyAdapter,Z as kyselyAdapter};
