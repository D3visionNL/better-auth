"use strict";var L=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var ne=Object.getOwnPropertyNames;var ie=Object.prototype.hasOwnProperty;var se=(e,i)=>{for(var c in i)L(e,c,{get:i[c],enumerable:!0})},ae=(e,i,c,u)=>{if(i&&typeof i=="object"||typeof i=="function")for(let f of ne(i))!ie.call(e,f)&&f!==c&&L(e,f,{get:()=>i[f],enumerable:!(u=re(i,f))||u.enumerable});return e};var oe=e=>ae(L({},"__esModule",{value:!0}),e);var _e={};se(_e,{convertFromDB:()=>qe,convertToDB:()=>Se,createFieldAttribute:()=>Oe,createInternalAdapter:()=>Fe,getAdapter:()=>Ue,getAuthTables:()=>v,getMigrations:()=>Me,getSchema:()=>j,getWithHooks:()=>V,matchType:()=>ee,toZodSchema:()=>Ie});module.exports=oe(_e);var E=(e,i="ms")=>new Date(Date.now()+(i==="sec"?e*1e3:e));var h=require("zod"),de=require("better-call"),He=h.z.object({id:h.z.string(),providerId:h.z.string(),accountId:h.z.string(),name:h.z.string().nullish(),userId:h.z.string(),accessToken:h.z.string().nullish(),refreshToken:h.z.string().nullish(),idToken:h.z.string().nullish(),accessTokenExpiresAt:h.z.date().nullish(),refreshTokenExpiresAt:h.z.date().nullish(),scope:h.z.string().nullish(),password:h.z.string().nullish(),image:h.z.string().nullish(),createdAt:h.z.date().default(()=>new Date),updatedAt:h.z.date().default(()=>new Date)}),$e=h.z.object({id:h.z.string(),email:h.z.string().transform(e=>e.toLowerCase()),emailVerified:h.z.boolean().default(!1),name:h.z.string(),image:h.z.string().nullish(),createdAt:h.z.date().default(()=>new Date),updatedAt:h.z.date().default(()=>new Date)}),Ke=h.z.object({id:h.z.string(),userId:h.z.string(),expiresAt:h.z.date(),createdAt:h.z.date().default(()=>new Date),updatedAt:h.z.date().default(()=>new Date),token:h.z.string(),ipAddress:h.z.string().nullish(),userAgent:h.z.string().nullish()}),We=h.z.object({id:h.z.string(),value:h.z.string(),createdAt:h.z.date().default(()=>new Date),updatedAt:h.z.date().default(()=>new Date),expiresAt:h.z.date(),identifier:h.z.string()});function H(e,i){let c=i.fields,u={};for(let f in e){let A=c[f];if(!A){u[f]=e[f];continue}A.returned!==!1&&(u[f]=e[f])}return u}function $(e,i){let c={...i==="user"?e.user?.additionalFields:{},...i==="session"?e.session?.additionalFields:{}};for(let u of e.plugins||[])u.schema&&u.schema[i]&&(c={...c,...u.schema[i].fields});return c}function P(e,i){let c=$(e,"user");return H(i,{fields:c})}function N(e,i){let c=$(e,"session");return H(i,{fields:c})}function V(e,i){let c=i.hooks;async function u(o,y,t){let r=o;for(let l of c||[]){let d=l[y]?.create?.before;if(d){let s=await d(o);if(s===!1)return null;typeof s=="object"&&"data"in s&&(r=s.data)}}let n=t?await t.fn(r):null,a=!t||t.executeMainFn?await e.create({model:y,data:r}):n;for(let l of c||[]){let d=l[y]?.create?.after;d&&await d(a)}return a}async function f(o,y,t,r){let n=o;for(let d of c||[]){let s=d[t]?.update?.before;if(s){let p=await s(o);if(p===!1)return null;n=typeof p=="object"?p.data:p}}let a=r?await r.fn(n):null,l=!r||r.executeMainFn?await e.update({model:t,update:n,where:y}):a;for(let d of c||[]){let s=d[t]?.update?.after;s&&await s(l)}return l}async function A(o,y,t,r){let n=o;for(let d of c||[]){let s=d[t]?.update?.before;if(s){let p=await s(o);if(p===!1)return null;n=typeof p=="object"?p.data:p}}let a=r?await r.fn(n):null,l=!r||r.executeMainFn?await e.updateMany({model:t,update:n,where:y}):a;for(let d of c||[]){let s=d[t]?.update?.after;s&&await s(l)}return l}return{createWithHooks:u,updateWithHooks:f,updateManyWithHooks:A}}var U=Object.create(null),O=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?U:globalThis),K=new Proxy(U,{get(e,i){return O()[i]??U[i]},has(e,i){let c=O();return i in c||i in U},set(e,i,c){let u=O(!0);return u[i]=c,!0},deleteProperty(e,i){if(!i)return!1;let c=O(!0);return delete c[i],!0},ownKeys(){let e=O(!0);return Object.keys(e)}});function ue(e){return e?e!=="false":!1}var le=typeof process<"u"&&process.env&&process.env.NODE_ENV||"";var W=le==="test"||ue(K.TEST);function J(e,i){if(i.advanced?.ipAddress?.disableIpTracking)return null;let c="127.0.0.1";if(W)return c;let f=i.advanced?.ipAddress?.ipAddressHeaders||["x-client-ip","x-forwarded-for","cf-connecting-ip","fastly-client-ip","x-real-ip","x-cluster-client-ip","x-forwarded","forwarded-for","forwarded"],A=e instanceof Request?e.headers:e;for(let o of f){let y=A.get(o);if(typeof y=="string"){let t=y.split(",")[0].trim();if(t)return t}}return null}function S(e){try{return JSON.parse(e)}catch{return null}}var z=require("@better-auth/utils/random"),F=e=>(0,z.createRandomStringGenerator)("a-z","A-Z","0-9")(e||32);var be=require("zod"),ve=require("better-call");var I=class extends Error{constructor(i,c){super(i),this.name="BetterAuthError",this.message=i,this.cause=c,this.stack=""}};var he=require("@better-auth/utils/hash"),xe=require("@noble/ciphers/chacha"),M=require("@noble/ciphers/utils"),we=require("@noble/ciphers/webcrypto");var fe=require("@better-auth/utils/hash");var pe=require("jose");var me=require("@noble/hashes/scrypt"),ye=require("uncrypto"),ge=require("@better-auth/utils/hex");var G=require("@better-auth/utils/random"),Ae=(0,G.createRandomStringGenerator)("a-z","0-9","A-Z","-_");var _=["info","success","warn","error","debug"];function Te(e,i){return _.indexOf(i)<=_.indexOf(e)}var b={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},ke={info:b.fg.blue,success:b.fg.green,warn:b.fg.yellow,error:b.fg.red,debug:b.fg.magenta},Re=(e,i)=>{let c=new Date().toISOString();return`${b.dim}${c}${b.reset} ${ke[e]}${e.toUpperCase()}${b.reset} ${b.bright}[Better Auth]:${b.reset} ${i}`},C=e=>{let i=e?.disabled!==!0,c=e?.level??"error",u=(f,A,o=[])=>{if(!i||!Te(c,f))return;let y=Re(f,A);if(!e||typeof e.log!="function"){f==="error"?console.error(y,...o):f==="warn"?console.warn(y,...o):console.log(y,...o);return}e.log(f==="success"?"info":f,y,...o)};return Object.fromEntries(_.map(f=>[f,(...[A,...o])=>u(f,A,o)]))},Z=C();var Fe=(e,i)=>{let c=i.options,u=c.secondaryStorage,f=c.session?.expiresIn||60*60*24*7,{createWithHooks:A,updateWithHooks:o,updateManyWithHooks:y}=V(e,i);return{createOAuthUser:async(t,r)=>{let n=await A({createdAt:new Date,updatedAt:new Date,...t},"user"),a=await A({...r,userId:n.id||t.id,createdAt:new Date,updatedAt:new Date},"account");return{user:n,account:a}},createUser:async t=>await A({createdAt:new Date,updatedAt:new Date,emailVerified:!1,...t,email:t.email.toLowerCase()},"user"),createAccount:async t=>await A({createdAt:new Date,updatedAt:new Date,...t},"account"),listSessions:async t=>{if(u){let n=await u.get(`active-sessions-${t}`);if(!n)return[];let a=S(n)||[],l=Date.now(),d=a.filter(p=>p.expiresAt>l),s=[];for(let p of d){let g=await u.get(p.token);if(g){let m=JSON.parse(g),w=N(i.options,{...m.session,expiresAt:new Date(m.session.expiresAt)});s.push(w)}}return s}return await e.findMany({model:"session",where:[{field:"userId",value:t}]})},listUsers:async(t,r,n,a)=>await e.findMany({model:"user",limit:t,offset:r,sortBy:n,where:a}),listTotalUsers:async()=>await e.count({model:"user"}),deleteUser:async t=>{await e.deleteMany({model:"session",where:[{field:"userId",value:t}]}),await e.deleteMany({model:"account",where:[{field:"userId",value:t}]}),await e.delete({model:"user",where:[{field:"id",value:t}]})},createSession:async(t,r,n,a)=>{let l=r instanceof Request?r.headers:r,{id:d,...s}=a||{},p={ipAddress:r&&J(r,i.options)||"",userAgent:l?.get("user-agent")||"",...s,expiresAt:n?E(60*60*24,"sec"):E(f,"sec"),userId:t,token:F(32),createdAt:new Date,updatedAt:new Date};return await A(p,"session",u?{fn:async m=>{let w=await u.get(`active-sessions-${t}`),x=[],R=Date.now();return w&&(x=S(w)||[],x=x.filter(te=>te.expiresAt>R)),x.push({token:p.token,expiresAt:R+f*1e3}),await u.set(`active-sessions-${t}`,JSON.stringify(x),f),m},executeMainFn:c.session?.storeSessionInDatabase}:void 0)},findSession:async t=>{if(u){let d=await u.get(t);if(d){let s=JSON.parse(d),p=N(i.options,{...s.session,expiresAt:new Date(s.session.expiresAt),createdAt:new Date(s.session.createdAt),updatedAt:new Date(s.session.updatedAt)}),g=P(i.options,{...s.user,createdAt:new Date(s.user.createdAt),updatedAt:new Date(s.user.updatedAt)});return{session:p,user:g}}}let r=await e.findOne({model:"session",where:[{value:t,field:"token"}]});if(!r)return null;let n=await e.findOne({model:"user",where:[{value:r.userId,field:"id"}]});if(!n)return null;let a=N(i.options,r),l=P(i.options,n);return u&&await u?.set(t,JSON.stringify({session:a,user:l}),a.expiresAt?Math.floor(((a.expiresAt instanceof Date?a.expiresAt.getTime():new Date(a.expiresAt).getTime())-Date.now())/1e3):f),{session:a,user:l}},findSessions:async t=>{if(u){let l=[];for(let d of t){let s=await u.get(d);if(s){let p=JSON.parse(s),g={session:{...p.session,expiresAt:new Date(p.session.expiresAt)},user:{...p.user,createdAt:new Date(p.user.createdAt),updatedAt:new Date(p.user.updatedAt)}};l.push(g)}}return l}let r=await e.findMany({model:"session",where:[{field:"token",value:t,operator:"in"}]}),n=r.map(l=>l.userId);if(!n.length)return[];let a=await e.findMany({model:"user",where:[{field:"id",value:n,operator:"in"}]});return r.map(l=>{let d=a.find(s=>s.id===l.userId);return d?{session:l,user:d}:null})},updateSession:async(t,r)=>await o(r,[{field:"token",value:t}],"session",u?{async fn(a){let l=await u.get(t),d=null;return l?(d={...JSON.parse(l).session,...a},d):null},executeMainFn:c.session?.storeSessionInDatabase}:void 0),deleteSession:async t=>{if(u){await u.delete(t),c.session?.storeSessionInDatabase&&await e.delete({model:"session",where:[{field:"token",value:t}]});return}await e.delete({model:"session",where:[{field:"token",value:t}]})},deleteAccounts:async t=>{await e.deleteMany({model:"account",where:[{field:"userId",value:t}]})},deleteAccount:async(t,r)=>{await e.delete({model:"account",where:[{field:"providerId",value:t},{field:"userId",value:r}]})},deleteSessions:async t=>{if(u){if(typeof t=="string"){let r=await u.get(`active-sessions-${t}`),n=r?S(r):[];if(!n)return;for(let a of n)await u.delete(a.token)}else for(let r of t)await u.get(r)&&await u.delete(r);c.session?.storeSessionInDatabase&&await e.deleteMany({model:"session",where:[{field:Array.isArray(t)?"token":"userId",value:t,operator:Array.isArray(t)?"in":void 0}]});return}await e.deleteMany({model:"session",where:[{field:Array.isArray(t)?"token":"userId",value:t,operator:Array.isArray(t)?"in":void 0}]})},findOAuthUser:async(t,r,n)=>{let a=null;if(a=await e.findOne({model:"user",where:[{value:t.toLowerCase(),field:"email"}]}),!a){let d=await e.findOne({model:"account",where:[{value:r,field:"accountId"},{value:n,field:"providerId"}]});return d?(a=await e.findOne({model:"user",where:[{value:d.userId,field:"id"}]}),{user:a,accounts:[d]}):null}let l=await e.findMany({model:"account",where:[{value:a.id,field:"userId"}]});return{user:a,accounts:l||[]}},findUserByEmail:async(t,r)=>{let n=await e.findOne({model:"user",where:[{value:t.toLowerCase(),field:"email"}]});if(!n)return null;if(r?.includeAccounts){let a=await e.findMany({model:"account",where:[{value:n.id,field:"userId"}]});return{user:n,accounts:a}}return{user:n,accounts:[]}},findUserById:async t=>await e.findOne({model:"user",where:[{field:"id",value:t}]}),linkAccount:async t=>await A({...t,createdAt:new Date,updatedAt:new Date},"account"),updateUser:async(t,r)=>await o(r,[{field:"id",value:t}],"user"),updateUserByEmail:async(t,r)=>await o(r,[{field:"email",value:t}],"user"),updatePassword:async(t,r)=>{await y({password:r},[{field:"userId",value:t},{field:"providerId",value:"credential"}],"account")},findAccounts:async t=>await e.findMany({model:"account",where:[{field:"userId",value:t}]}),findAccount:async t=>await e.findOne({model:"account",where:[{field:"accountId",value:t}]}),findAccountByUserId:async t=>await e.findMany({model:"account",where:[{field:"userId",value:t}]}),updateAccount:async(t,r)=>await o(r,[{field:"id",value:t}],"account"),createVerificationValue:async t=>await A({createdAt:new Date,updatedAt:new Date,...t},"verification"),findVerificationValue:async t=>(await e.findMany({model:"verification",where:[{field:"identifier",value:t}],sortBy:{field:"createdAt",direction:"desc"},limit:1}))[0],deleteVerificationValue:async t=>{await e.delete({model:"verification",where:[{field:"id",value:t}]})},deleteVerificationByIdentifier:async t=>{await e.delete({model:"verification",where:[{field:"identifier",value:t}]})},updateVerificationValue:async(t,r)=>await o(r,[{field:"id",value:t}],"verification")}};var Oe=(e,i)=>({type:e,...i});var v=e=>{let i=e.plugins?.reduce((t,r)=>{let n=r.schema;if(!n)return t;for(let[a,l]of Object.entries(n))t[a]={fields:{...t[a]?.fields,...l.fields},modelName:l.modelName||a};return t},{}),c=e.rateLimit?.storage==="database",u={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:f,session:A,account:o,...y}=i||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...f?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...A?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...o?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...y,...c?u:{}}};var k=require("zod");function Ie(e){return k.z.object({...Object.keys(e).reduce((c,u)=>{let f=e[u];if(!f)return c;if(f.type==="string[]"||f.type==="number[]")return{...c,[u]:k.z.array(f.type==="string[]"?k.z.string():k.z.number())};if(Array.isArray(f.type))return{...c,[u]:k.z.any()};let A=k.z[f.type]();return f?.required===!1&&(A=A.optional()),f?.returned===!1?c:{...c,[u]:A}},{})})}var D=require("kysely"),T=require("kysely");function Q(e){if(!e)return null;if("dialect"in e)return Q(e.dialect);if("createDriver"in e){if(e instanceof T.SqliteDialect)return"sqlite";if(e instanceof T.MysqlDialect)return"mysql";if(e instanceof T.PostgresDialect)return"postgres";if(e instanceof D.MssqlDialect)return"mssql"}return"aggregate"in e?"sqlite":"getConnection"in e?"mysql":"connect"in e?"postgres":null}var q=async e=>{let i=e.database;if(!i)return{kysely:null,databaseType:null};if("db"in i)return{kysely:i.db,databaseType:i.type};if("dialect"in i)return{kysely:new D.Kysely({dialect:i.dialect}),databaseType:i.type};let c,u=Q(i);return"createDriver"in i&&(c=i),"aggregate"in i&&(c=new T.SqliteDialect({database:i})),"getConnection"in i&&(c=new T.MysqlDialect(i)),"connect"in i&&(c=new T.PostgresDialect({pool:i})),{kysely:c?new D.Kysely({dialect:c}):null,databaseType:u}};function B(e,i,c){return c==="update"?e:e==null&&i.defaultValue?typeof i.defaultValue=="function"?i.defaultValue():i.defaultValue:e}var De=(e,i,c)=>{let u=v(i);function f(r,n){if(n==="id")return n;let a=u[r].fields[n];return a||console.log("Field not found",r,n),a.fieldName||n}function A(r,n,a){let{type:l="sqlite"}=c||{},d=u[n].fields[a];return d.type==="boolean"&&l==="sqlite"&&r!==null&&r!==void 0?r?1:0:d.type==="date"&&r&&r instanceof Date&&l==="sqlite"?r.toISOString():r}function o(r,n,a){let{type:l="sqlite"}=c||{},d=u[n].fields[a];return d.type==="boolean"&&l==="sqlite"&&r!==null?r===1:d.type==="date"&&r?new Date(r):r}function y(r){return u[r].modelName}let t=i?.advanced?.generateId===!1;return{transformInput(r,n,a){let l=t||a==="update"?{}:{id:i.advanced?.generateId?i.advanced.generateId({model:n}):r.id||F()},d=u[n].fields;for(let s in d){let p=r[s];l[d[s].fieldName||s]=B(A(p,n,s),d[s],a)}return l},transformOutput(r,n,a=[]){if(!r)return null;let l=r.id?a.length===0||a.includes("id")?{id:r.id}:{}:{},d=u[n].fields;for(let s in d){if(a.length&&!a.includes(s))continue;let p=d[s];p&&(l[s]=o(r[p.fieldName||s],n,s))}return l},convertWhereClause(r,n){if(!n)return{and:null,or:null};let a={and:[],or:[]};return n.forEach(l=>{let{field:d,value:s,operator:p="=",connector:g="AND"}=l,m=f(r,d),w=x=>p.toLowerCase()==="in"?x(m,"in",Array.isArray(s)?s:[s]):p==="contains"?x(m,"like",`%${s}%`):p==="starts_with"?x(m,"like",`${s}%`):p==="ends_with"?x(m,"like",`%${s}`):p==="eq"?x(m,"=",s):p==="ne"?x(m,"<>",s):p==="gt"?x(m,">",s):p==="gte"?x(m,">=",s):p==="lt"?x(m,"<",s):p==="lte"?x(m,"<=",s):x(m,p,s);g==="OR"?a.or.push(w):a.and.push(w)}),{and:a.and.length?a.and:null,or:a.or.length?a.or:null}},async withReturning(r,n,a,l){let d;if(c?.type!=="mysql")d=await n.returningAll().executeTakeFirst();else{await n.execute();let s=r.id?"id":l[0].field?l[0].field:"id",p=r[s]||l[0].value;d=await e.selectFrom(y(a)).selectAll().where(f(a,s),"=",p).executeTakeFirst()}return d},getModelName:y,getField:f}},X=(e,i)=>c=>{let{transformInput:u,withReturning:f,transformOutput:A,convertWhereClause:o,getModelName:y,getField:t}=De(e,c,i);return{id:"kysely",async create(r){let{model:n,data:a,select:l}=r,d=u(a,n,"create"),s=e.insertInto(y(n)).values(d);return A(await f(d,s,n,[]),n,l)},async findOne(r){let{model:n,where:a,select:l}=r,{and:d,or:s}=o(n,a),p=e.selectFrom(y(n)).selectAll();d&&(p=p.where(m=>m.and(d.map(w=>w(m))))),s&&(p=p.where(m=>m.or(s.map(w=>w(m)))));let g=await p.executeTakeFirst();return g?A(g,n,l):null},async findMany(r){let{model:n,where:a,limit:l,offset:d,sortBy:s}=r,{and:p,or:g}=o(n,a),m=e.selectFrom(y(n));p&&(m=m.where(x=>x.and(p.map(R=>R(x))))),g&&(m=m.where(x=>x.or(g.map(R=>R(x))))),m=m.limit(l||100),d&&(m=m.offset(d)),s&&(m=m.orderBy(t(n,s.field),s.direction));let w=await m.selectAll().execute();return w?w.map(x=>A(x,n)):[]},async update(r){let{model:n,where:a,update:l}=r,{and:d,or:s}=o(n,a),p=u(l,n,"update"),g=e.updateTable(y(n)).set(p);return d&&(g=g.where(w=>w.and(d.map(x=>x(w))))),s&&(g=g.where(w=>w.or(s.map(x=>x(w))))),await A(await f(p,g,n,a),n)},async updateMany(r){let{model:n,where:a,update:l}=r,{and:d,or:s}=o(n,a),p=u(l,n,"update"),g=e.updateTable(y(n)).set(p);return d&&(g=g.where(w=>w.and(d.map(x=>x(w))))),s&&(g=g.where(w=>w.or(s.map(x=>x(w))))),(await g.execute()).length},async count(r){let{model:n,where:a}=r,{and:l,or:d}=o(n,a),s=e.selectFrom(y(n)).selectAll();return l&&(s=s.where(g=>g.and(l.map(m=>m(g))))),d&&(s=s.where(g=>g.or(d.map(m=>m(g))))),(await s.execute()).length},async delete(r){let{model:n,where:a}=r,{and:l,or:d}=o(n,a),s=e.deleteFrom(y(n));l&&(s=s.where(p=>p.and(l.map(g=>g(p))))),d&&(s=s.where(p=>p.or(d.map(g=>g(p))))),await s.execute()},async deleteMany(r){let{model:n,where:a}=r,{and:l,or:d}=o(n,a),s=e.deleteFrom(y(n));return l&&(s=s.where(p=>p.and(l.map(g=>g(p))))),d&&(s=s.where(p=>p.or(d.map(g=>g(p))))),(await s.execute()).length},options:i}};var Ne=e=>{let i=v(e);function c(u,f){return f==="id"?f:i[u].fields[f].fieldName||f}return{transformInput(u,f,A){let o=A==="update"?{}:{id:e.advanced?.generateId?e.advanced.generateId({model:f}):u.id||F()},y=i[f].fields;for(let t in y){let r=u[t];r===void 0&&!y[t].defaultValue||(o[y[t].fieldName||t]=B(r,y[t],A))}return o},transformOutput(u,f,A=[]){if(!u)return null;let o=u.id||u._id?A.length===0||A.includes("id")?{id:u.id}:{}:{},y=i[f].fields;for(let t in y){if(A.length&&!A.includes(t))continue;let r=y[t];r&&(o[t]=u[r.fieldName||t])}return o},convertWhereClause(u,f,A){return f.filter(o=>u.every(y=>{let{field:t,value:r,operator:n}=y,a=c(A,t);if(n==="in"){if(!Array.isArray(r))throw new Error("Value must be an array");return r.includes(o[a])}else return n==="contains"?o[a].includes(r):n==="starts_with"?o[a].startsWith(r):n==="ends_with"?o[a].endsWith(r):o[a]===r}))},getField:c}},Y=e=>i=>{let{transformInput:c,transformOutput:u,convertWhereClause:f,getField:A}=Ne(i);return{id:"memory",create:async({model:o,data:y})=>{let t=c(y,o,"create");return e[o].push(t),u(t,o)},findOne:async({model:o,where:y,select:t})=>{let r=e[o],a=f(y,r,o)[0]||null;return u(a,o,t)},findMany:async({model:o,where:y,sortBy:t,limit:r,offset:n})=>{let a=e[o];return y&&(a=f(y,a,o)),t&&(a=a.sort((l,d)=>{let s=A(o,t.field);return t.direction==="asc"?l[s]>d[s]?1:-1:l[s]<d[s]?1:-1})),n!==void 0&&(a=a.slice(n)),r!==void 0&&(a=a.slice(0,r)),a.map(l=>u(l,o))},update:async({model:o,where:y,update:t})=>{let r=e[o],n=f(y,r,o);return n.forEach(a=>{Object.assign(a,c(t,o,"update"))}),u(n[0],o)},count:async({model:o})=>e[o].length,delete:async({model:o,where:y})=>{let t=e[o],r=f(y,t,o);e[o]=t.filter(n=>!r.includes(n))},deleteMany:async({model:o,where:y})=>{let t=e[o],r=f(y,t,o),n=0;return e[o]=t.filter(a=>r.includes(a)?(n++,!1):!r.includes(a)),n},updateMany(o){let{model:y,where:t,update:r}=o,n=e[y],a=f(t,n,y);return a.forEach(l=>{Object.assign(l,r)}),a[0]||null}}};async function Ue(e){if(!e.database){let u=v(e),f=Object.keys(u).reduce((A,o)=>(A[o]=[],A),{});return Z.warn("No database configuration provided. Using memory adapter in development"),Y(f)(e)}if(typeof e.database=="function")return e.database(e);let{kysely:i,databaseType:c}=await q(e);if(!i)throw new I("Failed to initialize database adapter");return X(i,{type:c||"sqlite"})(e)}function Se(e,i){let c=i.id?{id:i.id}:{};for(let u in e){let f=e[u],A=i[u];A!==void 0&&(c[f.fieldName||u]=A)}return c}function qe(e,i){if(!i)return null;let c={id:i.id};for(let[u,f]of Object.entries(e))c[u]=i[f.fieldName||u];return c}function j(e){let i=v(e),c={};for(let u in i){let f=i[u],A=f.fields,o={};if(Object.entries(A).forEach(([y,t])=>{if(o[t.fieldName||y]=t,t.references){let r=i[t.references.model];r&&(o[t.fieldName||y].references={model:r.modelName,field:t.references.field})}}),c[f.modelName]){c[f.modelName].fields={...c[f.modelName].fields,...o};continue}c[f.modelName]={fields:o,order:f.order||1/0}}return c}var Be={string:["character varying","text"],number:["int4","integer","bigint","smallint","numeric","real","double precision"],boolean:["bool","boolean"],date:["timestamp","date"]},Le={string:["varchar","text"],number:["integer","int","bigint","smallint","decimal","float","double"],boolean:["boolean","tinyint"],date:["timestamp","datetime","date"]},Ee={string:["TEXT"],number:["INTEGER","REAL"],boolean:["INTEGER","BOOLEAN"],date:["DATE","INTEGER"]},Pe={string:["nvarchar","varchar"],number:["int","bigint","smallint","decimal","float","double"],boolean:["bit","boolean"],date:["datetime","date"]},Ve={postgres:Be,mysql:Le,sqlite:Ee,mssql:Pe};function ee(e,i,c){if(i==="string[]"||i==="number[]")return e.toLowerCase().includes("json");let u=Ve[c];return(Array.isArray(i)?u.string.map(o=>o.toLowerCase()):u[i].map(o=>o.toLowerCase())).includes(e.toLowerCase())}async function Me(e){let i=j(e),c=C(e.logger),{kysely:u,databaseType:f}=await q(e);f||(c.warn("Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this."),f="sqlite"),u||(c.error("Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter."),process.exit(1));let A=await u.introspection.getTables(),o=[],y=[];for(let[l,d]of Object.entries(i)){let s=A.find(g=>g.name===l);if(!s){let g=o.findIndex(x=>x.table===l),m={table:l,fields:d.fields,order:d.order||1/0},w=o.findIndex(x=>(x.order||1/0)>m.order);w===-1?g===-1?o.push(m):o[g].fields={...o[g].fields,...d.fields}:o.splice(w,0,m);continue}let p={};for(let[g,m]of Object.entries(d.fields)){let w=s.columns.find(x=>x.name===g);if(!w){p[g]=m;continue}ee(w.dataType,m.type,f)||c.warn(`Field ${g} in table ${l} has a different type in the database. Expected ${m.type} but got ${w.dataType}.`)}Object.keys(p).length>0&&y.push({table:l,fields:p,order:d.order||1/0})}let t=[];function r(l){let d=l.type,s={string:{sqlite:"text",postgres:"text",mysql:l.unique?"varchar(255)":l.references?"varchar(36)":"text",mssql:"text"},boolean:{sqlite:"integer",postgres:"boolean",mysql:"boolean",mssql:"boolean"},number:{sqlite:"integer",postgres:"integer",mysql:"integer",mssql:"integer"},date:{sqlite:"date",postgres:"timestamp",mysql:"datetime",mssql:"datetime"}};return f==="sqlite"&&(d==="string[]"||d==="number[]")?"text":d==="string[]"||d==="number[]"?"jsonb":Array.isArray(d)?"text":s[d][f||"sqlite"]}if(y.length)for(let l of y)for(let[d,s]of Object.entries(l.fields)){let p=r(s),g=u.schema.alterTable(l.table).addColumn(d,p,m=>(m=s.required!==!1?m.notNull():m,s.references&&(m=m.references(`${s.references.model}.${s.references.field}`)),s.unique&&(m=m.unique()),m));t.push(g)}if(o.length)for(let l of o){let d=u.schema.createTable(l.table).addColumn("id",f==="mysql"?"varchar(36)":"text",s=>s.primaryKey().notNull());for(let[s,p]of Object.entries(l.fields)){let g=r(p);d=d.addColumn(s,g,m=>(m=p.required!==!1?m.notNull():m,p.references&&(m=m.references(`${p.references.model}.${p.references.field}`)),p.unique&&(m=m.unique()),m))}t.push(d)}async function n(){for(let l of t)await l.execute()}async function a(){return t.map(d=>d.compile().sql).join(`;

`)}return{toBeCreated:o,toBeAdded:y,runMigrations:n,compileMigrations:a}}0&&(module.exports={convertFromDB,convertToDB,createFieldAttribute,createInternalAdapter,getAdapter,getAuthTables,getMigrations,getSchema,getWithHooks,matchType,toZodSchema});
