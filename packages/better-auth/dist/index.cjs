"use strict";var $e=Object.defineProperty;var Yr=Object.getOwnPropertyDescriptor;var Xr=Object.getOwnPropertyNames;var en=Object.prototype.hasOwnProperty;var tn=(e,t)=>{for(var r in t)$e(e,r,{get:t[r],enumerable:!0})},rn=(e,t,r,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of Xr(t))!en.call(e,o)&&o!==r&&$e(e,o,{get:()=>t[o],enumerable:!(n=Yr(t,o))||n.enumerable});return e};var nn=e=>rn($e({},"__esModule",{value:!0}),e);var oo={};tn(oo,{BetterAuthError:()=>B,HIDE_METADATA:()=>ae,MissingDependencyError:()=>Me,betterAuth:()=>no,capitalizeFirstLetter:()=>Fn,createCookieGetter:()=>_e,createLogger:()=>Te,deleteSessionCookie:()=>z,generateId:()=>H,generateState:()=>ke,getCookies:()=>He,levels:()=>Le,logger:()=>N,parseCookies:()=>un,parseSetCookieHeader:()=>cn,parseState:()=>Je,setCookieCache:()=>Ie,setSessionCookie:()=>C,shouldPublishLog:()=>zt});module.exports=nn(oo);var P=require("better-call");var yt=require("better-call");var ne=require("better-call"),pt=(0,ne.createMiddleware)(async()=>({})),he=(0,ne.createMiddlewareCreator)({use:[pt,(0,ne.createMiddleware)(async()=>({}))]}),v=(0,ne.createEndpointCreator)({use:[pt]});function Ve(e){return e==="-"||e==="^"||e==="$"||e==="+"||e==="."||e==="("||e===")"||e==="|"||e==="["||e==="]"||e==="{"||e==="}"||e==="*"||e==="?"||e==="\\"?`\\${e}`:e}function on(e){let t="";for(let r=0;r<e.length;r++)t+=Ve(e[r]);return t}function ft(e,t=!0){if(Array.isArray(e))return`(?:${e.map(c=>`^${ft(c,t)}$`).join("|")})`;let r="",n="",o=".";t===!0?(r="/",n="[/\\\\]",o="[^/\\\\]"):t&&(r=t,n=on(r),n.length>1?(n=`(?:${n})`,o=`((?!${n}).)`):o=`[^${n}]`);let i=t?`${n}+?`:"",a=t?`${n}*?`:"",u=t?e.split(r):[e],s="";for(let d=0;d<u.length;d++){let c=u[d],p=u[d+1],m="";if(!(!c&&d>0)){if(t&&(d===u.length-1?m=a:p!=="**"?m=i:m=""),t&&c==="**"){m&&(s+=d===0?"":m,s+=`(?:${o}*?${m})*?`);continue}for(let l=0;l<c.length;l++){let f=c[l];f==="\\"?l<c.length-1&&(s+=Ve(c[l+1]),l++):f==="?"?s+=o:f==="*"?s+=`${o}*?`:s+=Ve(f)}s+=m}}return s}function sn(e,t){if(typeof t!="string")throw new TypeError(`Sample must be a string, but ${typeof t} given`);return e.test(t)}function Ue(e,t){if(typeof e!="string"&&!Array.isArray(e))throw new TypeError(`The first argument must be a single pattern string or an array of patterns, but ${typeof e} given`);if((typeof t=="string"||typeof t=="boolean")&&(t={separator:t}),arguments.length===2&&!(typeof t>"u"||typeof t=="object"&&t!==null&&!Array.isArray(t)))throw new TypeError(`The second argument must be an options object or a string/boolean separator, but ${typeof t} given`);if(t=t||{},t.separator==="\\")throw new Error("\\ is not a valid separator because it is used for escaping. Try setting the separator to `true` instead");let r=ft(e,t.separator),n=new RegExp(`^${r}$`,t.flags),o=sn.bind(null,n);return o.options=t,o.pattern=e,o.regexp=n,o}var xe=Object.create(null),ye=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?xe:globalThis),j=new Proxy(xe,{get(e,t){return ye()[t]??xe[t]},has(e,t){let r=ye();return t in r||t in xe},set(e,t,r){let n=ye(!0);return n[t]=r,!0},deleteProperty(e,t){if(!t)return!1;let r=ye(!0);return delete r[t],!0},ownKeys(){let e=ye(!0);return Object.keys(e)}});function an(e){return e?e!=="false":!1}var Oe=typeof process<"u"&&process.env&&process.env.NODE_ENV||"",we=Oe==="production",Se=Oe==="dev"||Oe==="development",mt=Oe==="test"||an(j.TEST);var B=class extends Error{constructor(t,r){super(t),this.name="BetterAuthError",this.message=t,this.cause=r,this.stack=""}},Me=class extends B{constructor(t){super(`The package "${t}" is required. Make sure it is installed.`,t)}};function dn(e){try{return new URL(e).pathname!=="/"}catch{throw new B(`Invalid base URL: ${e}. Please provide a valid base URL.`)}}function ze(e,t="/api/auth"){return dn(e)?e:(t=t.startsWith("/")?t:`/${t}`,`${e}${t}`)}function be(e,t){if(e)return ze(e,t);let r=j.BETTER_AUTH_URL||j.NEXT_PUBLIC_BETTER_AUTH_URL||j.PUBLIC_BETTER_AUTH_URL||j.NUXT_PUBLIC_BETTER_AUTH_URL||j.NUXT_PUBLIC_AUTH_URL||(j.BASE_URL!=="/"?j.BASE_URL:void 0);if(r)return ze(r,t);if(typeof window<"u"&&window.location)return ze(window.location.origin,t)}function gt(e){try{return new URL(e).origin}catch{return null}}function ht(e){return e.includes("://")?new URL(e).host:e}var wt=he(async e=>{if(e.request?.method!=="POST")return;let{body:t,query:r,context:n}=e,o=e.headers?.get("origin")||e.headers?.get("referer")||"",i=t?.callbackURL||r?.callbackURL,a=t?.redirectTo,u=r?.currentURL,s=t?.errorCallbackURL,d=t?.newUserCallbackURL,c=n.trustedOrigins,p=e.headers?.has("cookie"),m=(f,g)=>f.startsWith("/")?!1:g.includes("*")?Ue(g)(ht(f)):f.startsWith(g),l=(f,g)=>{if(!f)return;if(!c.some(A=>m(f,A)||f?.startsWith("/")&&g!=="origin"&&!f.includes(":")))throw e.context.logger.error(`Invalid ${g}: ${f}`),e.context.logger.info(`If it's a valid URL, please add ${f} to trustedOrigins in your auth config
`,`Current list of trustedOrigins: ${c}`),new yt.APIError("FORBIDDEN",{message:`Invalid ${g}`})};p&&!e.context.options.advanced?.disableCSRFCheck&&l(o,"origin"),i&&l(i,"callbackURL"),a&&l(a,"redirectURL"),u&&l(u,"currentURL"),s&&l(s,"errorCallbackURL"),d&&l(a,"newUserCallbackURL")});var L=require("better-call"),I=require("zod");var M=(e,t="ms")=>new Date(Date.now()+(t==="sec"?e*1e3:e));var bt=require("@better-auth/utils/base64");var oe=(e,t)=>{let r=()=>{switch(t){case"ms":return e;case"s":return e*1e3;case"m":return e*1e3*60;case"h":return e*1e3*60*60;case"d":return e*1e3*60*60*24;case"w":return e*1e3*60*60*24*7;case"y":return e*1e3*60*60*24*365}},n={t:`${e}${t}`,value:e,tFormat:t,toMilliseconds:r,toSeconds:()=>n.toMilliseconds()/1e3,toMinutes:()=>n.toSeconds()/60,toHours:()=>n.toMinutes()/60,toDays:()=>n.toHours()/24,toWeeks:()=>n.toDays()/7,toYears:()=>n.toDays()/365,getDate:()=>new Date(Date.now()+n.toMilliseconds()),add:o=>{let i=typeof o=="string"?Ae(o).toMilliseconds():o.toMilliseconds();return oe(n.toMilliseconds()+i,"ms")},subtract:o=>{let i=typeof o=="string"?Ae(o).toMilliseconds():o.toMilliseconds();return oe(n.toMilliseconds()-i,"ms")},multiply:o=>oe(n.toMilliseconds()*o,"ms"),divide:o=>oe(n.toMilliseconds()/o,"ms"),equals:o=>{let i=typeof o=="string"?Ae(o).toMilliseconds():o.toMilliseconds();return n.toMilliseconds()===i},lessThan:o=>{let i=typeof o=="string"?Ae(o).toMilliseconds():o.toMilliseconds();return n.toMilliseconds()<i},greaterThan:o=>{let i=typeof o=="string"?Ae(o).toMilliseconds():o.toMilliseconds();return n.toMilliseconds()>i},format:o=>{let i=n.getDate();return o.replace(/YYYY|MM|DD|HH|mm|ss/g,a=>{switch(a){case"YYYY":return i.getFullYear().toString();case"MM":return(i.getMonth()+1).toString().padStart(2,"0");case"DD":return i.getDate().toString().padStart(2,"0");case"HH":return i.getHours().toString().padStart(2,"0");case"mm":return i.getMinutes().toString().padStart(2,"0");case"ss":return i.getSeconds().toString().padStart(2,"0");default:return a}})},fromNow:()=>{let o=n.toMilliseconds();return o<0?n.ago():o<1e3?"in a few seconds":o<6e4?`in ${Math.round(o/1e3)} seconds`:o<36e5?`in ${Math.round(o/6e4)} minutes`:o<864e5?`in ${Math.round(o/36e5)} hours`:o<6048e5?`in ${Math.round(o/864e5)} days`:o<26298e5?`in ${Math.round(o/6048e5)} weeks`:o<315576e5?`in ${Math.round(o/26298e5)} months`:`in ${Math.round(o/315576e5)} years`},ago:()=>{let o=-n.toMilliseconds();return o<0?n.fromNow():o<1e3?"a few seconds ago":o<6e4?`${Math.round(o/1e3)} seconds ago`:o<36e5?`${Math.round(o/6e4)} minutes ago`:o<864e5?`${Math.round(o/36e5)} hours ago`:o<6048e5?`${Math.round(o/864e5)} days ago`:o<26298e5?`${Math.round(o/6048e5)} weeks ago`:o<315576e5?`${Math.round(o/26298e5)} months ago`:`${Math.round(o/315576e5)} years ago`}};return n},Ae=e=>{let t=e.match(/^(\d+)(ms|s|m|h|d|w|y)$/);if(!t)throw new Error("Invalid time format");return oe(parseInt(t[1]),t[2])};var At=require("@better-auth/utils/hmac");function cn(e){let t=new Map;return e.split(", ").forEach(n=>{let o=n.split(";").map(p=>p.trim()),[i,...a]=o,[u,...s]=i.split("="),d=s.join("=");if(!u||d===void 0)return;let c={value:d};a.forEach(p=>{let[m,...l]=p.split("="),f=l.join("="),g=m.trim().toLowerCase();switch(g){case"max-age":c["max-age"]=f?parseInt(f.trim(),10):void 0;break;case"expires":c.expires=f?new Date(f.trim()):void 0;break;case"domain":c.domain=f?f.trim():void 0;break;case"path":c.path=f?f.trim():void 0;break;case"secure":c.secure=!0;break;case"httponly":c.httponly=!0;break;case"samesite":c.samesite=f?f.trim().toLowerCase():void 0;break;default:c[g]=f?f.trim():!0;break}}),t.set(u,c)}),t}function _e(e){let r=(e.advanced?.useSecureCookies!==void 0?e.advanced?.useSecureCookies:e.baseURL!==void 0?!!e.baseURL.startsWith("https://"):we)?"__Secure-":"",n=!!e.advanced?.crossSubDomainCookies?.enabled,o=n?e.advanced?.crossSubDomainCookies?.domain||(e.baseURL?new URL(e.baseURL).hostname:void 0):void 0;if(n&&!o)throw new B("baseURL is required when crossSubdomainCookies are enabled");function i(a,u={}){let s=e.advanced?.cookiePrefix||"better-auth",d=e.advanced?.cookies?.[a]?.name||`${s}.${a}`,c=e.advanced?.cookies?.[a]?.attributes;return{name:`${r}${d}`,attributes:{secure:!!r,sameSite:"lax",path:"/",httpOnly:!0,...n?{domain:o}:{},...e.advanced?.defaultCookieAttributes,...u,...c}}}return i}function He(e){let t=_e(e),r=e.session?.expiresIn||oe(7,"d").toSeconds(),n=t("session_token",{maxAge:r}),o=t("session_data",{maxAge:e.session?.cookieCache?.maxAge||60*5}),i=t("dont_remember");return{sessionToken:{name:n.name,options:n.attributes},sessionData:{name:o.name,options:o.attributes},dontRememberToken:{name:i.name,options:i.attributes}}}async function Ie(e,t){if(e.context.options.session?.cookieCache?.enabled){let n=bt.base64Url.encode(JSON.stringify({session:t,expiresAt:M(e.context.authCookies.sessionData.options.maxAge||60,"sec").getTime(),signature:await(0,At.createHMAC)("SHA-256","base64urlnopad").sign(e.context.secret,JSON.stringify(t))}),{padding:!1});if(n.length>4093)throw new B("Session data is too large to store in the cookie. Please disable session cookie caching or reduce the size of the session data");e.setCookie(e.context.authCookies.sessionData.name,n,e.context.authCookies.sessionData.options)}}async function C(e,t,r,n){let o=e.context.authCookies.sessionToken.options,i=r?void 0:e.context.sessionConfig.expiresIn;await e.setSignedCookie(e.context.authCookies.sessionToken.name,t.session.token,e.context.secret,{...o,maxAge:i,...n}),r&&await e.setSignedCookie(e.context.authCookies.dontRememberToken.name,"true",e.context.secret,e.context.authCookies.dontRememberToken.options),await Ie(e,t),e.context.setNewSession(t),e.context.options.secondaryStorage&&await e.context.secondaryStorage?.set(t.session.token,JSON.stringify({user:t.user,session:t.session}),Math.floor((new Date(t.session.expiresAt).getTime()-Date.now())/1e3))}function z(e){e.setCookie(e.context.authCookies.sessionToken.name,"",{...e.context.authCookies.sessionToken.options,maxAge:0}),e.setCookie(e.context.authCookies.sessionData.name,"",{...e.context.authCookies.sessionData.options,maxAge:0}),e.setCookie(e.context.authCookies.dontRememberToken.name,"",{...e.context.authCookies.dontRememberToken.options,maxAge:0})}function un(e){let t=e.split("; "),r=new Map;return t.forEach(n=>{let[o,i]=n.split("=");r.set(o,i)}),r}var ln=Object.defineProperty,pn=Object.defineProperties,fn=Object.getOwnPropertyDescriptors,Rt=Object.getOwnPropertySymbols,mn=Object.prototype.hasOwnProperty,gn=Object.prototype.propertyIsEnumerable,kt=(e,t,r)=>t in e?ln(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,ie=(e,t)=>{for(var r in t||(t={}))mn.call(t,r)&&kt(e,r,t[r]);if(Rt)for(var r of Rt(t))gn.call(t,r)&&kt(e,r,t[r]);return e},se=(e,t)=>pn(e,fn(t)),hn=class extends Error{constructor(e,t,r){super(t||e.toString(),{cause:r}),this.status=e,this.statusText=t,this.error=r}},yn=async(e,t)=>{var r,n,o,i,a,u;let s=t||{},d={onRequest:[t?.onRequest],onResponse:[t?.onResponse],onSuccess:[t?.onSuccess],onError:[t?.onError],onRetry:[t?.onRetry]};if(!t||!t?.plugins)return{url:e,options:s,hooks:d};for(let c of t?.plugins||[]){if(c.init){let p=await((r=c.init)==null?void 0:r.call(c,e.toString(),t));s=p.options||s,e=p.url}d.onRequest.push((n=c.hooks)==null?void 0:n.onRequest),d.onResponse.push((o=c.hooks)==null?void 0:o.onResponse),d.onSuccess.push((i=c.hooks)==null?void 0:i.onSuccess),d.onError.push((a=c.hooks)==null?void 0:a.onError),d.onRetry.push((u=c.hooks)==null?void 0:u.onRetry)}return{url:e,options:s,hooks:d}},Tt=class{constructor(e){this.options=e}shouldAttemptRetry(e,t){return this.options.shouldRetry?Promise.resolve(e<this.options.attempts&&this.options.shouldRetry(t)):Promise.resolve(e<this.options.attempts)}getDelay(){return this.options.delay}},wn=class{constructor(e){this.options=e}shouldAttemptRetry(e,t){return this.options.shouldRetry?Promise.resolve(e<this.options.attempts&&this.options.shouldRetry(t)):Promise.resolve(e<this.options.attempts)}getDelay(e){return Math.min(this.options.maxDelay,this.options.baseDelay*2**e)}};function bn(e){if(typeof e=="number")return new Tt({type:"linear",attempts:e,delay:1e3});switch(e.type){case"linear":return new Tt(e);case"exponential":return new wn(e);default:throw new Error("Invalid retry strategy")}}var An=e=>{let t={},r=n=>typeof n=="function"?n():n;if(e?.auth){if(e.auth.type==="Bearer"){let n=r(e.auth.token);if(!n)return t;t.authorization=`Bearer ${n}`}else if(e.auth.type==="Basic"){let n=r(e.auth.username),o=r(e.auth.password);if(!n||!o)return t;t.authorization=`Basic ${btoa(`${n}:${o}`)}`}else if(e.auth.type==="Custom"){let n=r(e.auth.value);if(!n)return t;t.authorization=`${r(e.auth.prefix)} ${n}`}}return t},Ut=["get","post","put","patch","delete"];var Rn=/^application\/(?:[\w!#$%&*.^`~-]*\+)?json(;.+)?$/i;function kn(e){let t=e.headers.get("content-type"),r=new Set(["image/svg","application/xml","application/xhtml","application/html"]);if(!t)return"json";let n=t.split(";").shift()||"";return Rn.test(n)?"json":r.has(n)||n.startsWith("text/")?"text":"blob"}function Tn(e){try{return JSON.parse(e),!0}catch{return!1}}function xt(e){if(e===void 0)return!1;let t=typeof e;return t==="string"||t==="number"||t==="boolean"||t===null?!0:t!=="object"?!1:Array.isArray(e)?!0:e.buffer?!1:e.constructor&&e.constructor.name==="Object"||typeof e.toJSON=="function"}function vt(e){try{return JSON.parse(e)}catch{return e}}function Et(e){return typeof e=="function"}function vn(e){if(e?.customFetchImpl)return e.customFetchImpl;if(typeof globalThis<"u"&&Et(globalThis.fetch))return globalThis.fetch;if(typeof window<"u"&&Et(window.fetch))return window.fetch;throw new Error("No fetch implementation found")}function En(e){let t=new Headers(e?.headers),r=An(e);for(let[n,o]of Object.entries(r||{}))t.set(n,o);if(!t.has("content-type")){let n=Un(e?.body);n&&t.set("content-type",n)}return t}function Un(e){return xt(e)?"application/json":null}function xn(e){if(!e?.body)return null;let t=new Headers(e?.headers);return xt(e.body)&&!t.has("content-type")?JSON.stringify(e.body):e.body}function On(e,t){var r;if(t?.method)return t.method.toUpperCase();if(e.startsWith("@")){let n=(r=e.split("@")[1])==null?void 0:r.split("/")[0];return Ut.includes(n)?n.toUpperCase():t?.body?"POST":"GET"}return t?.body?"POST":"GET"}function Sn(e,t){let r;return!e?.signal&&e?.timeout&&(r=setTimeout(()=>t?.abort(),e?.timeout)),{abortTimeout:r,clearTimeout:()=>{r&&clearTimeout(r)}}}function _n(e,t){let{baseURL:r,params:n,query:o}=t||{query:{},params:{},baseURL:""},i=e.startsWith("http")?e.split("/").slice(0,3).join("/"):r;if(!i)throw new TypeError(`Invalid URL ${e}. Are you passing in a relative URL but not setting the baseURL?`);if(e.startsWith("@")){let p=e.toString().split("@")[1].split("/")[0];Ut.includes(p)&&(e=e.replace(`@${p}/`,"/"))}i.endsWith("/")||(i+="/");let[a,u]=e.replace(i,"").split("?"),s=new URLSearchParams(u);for(let[p,m]of Object.entries(o||{}))s.set(p,String(m));if(n)if(Array.isArray(n)){let p=a.split("/").filter(m=>m.startsWith(":"));for(let[m,l]of p.entries()){let f=n[m];a=a.replace(l,f)}}else for(let[p,m]of Object.entries(n))a=a.replace(`:${p}`,String(m));a=a.split("/").map(encodeURIComponent).join("/"),a.startsWith("/")&&(a=a.slice(1));let d=s.size>0?`?${s}`.replace(/\+/g,"%20"):"";return new URL(`${a}${d}`,i)}var E=async(e,t)=>{var r,n,o,i,a,u,s,d;let{hooks:c,url:p,options:m}=await yn(e,t),l=vn(m),f=new AbortController,g=(r=m.signal)!=null?r:f.signal,b=_n(p,m),A=xn(m),R=En(m),h=On(p,m),y=se(ie({},m),{url:b,headers:R,body:A,method:h,signal:g});for(let $ of c.onRequest)if($){let D=await $(y);D instanceof Object&&(y=D)}("pipeTo"in y&&typeof y.pipeTo=="function"||typeof((n=t?.body)==null?void 0:n.pipe)=="function")&&("duplex"in y||(y.duplex="half"));let{clearTimeout:_}=Sn(m,f),k=await l(y.url,y);_();let Ee={response:k,request:y};for(let $ of c.onResponse)if($){let D=await $(se(ie({},Ee),{response:(o=t?.hookOptions)!=null&&o.cloneResponse?k.clone():k}));D instanceof Response?k=D:D instanceof Object&&(k=D.response)}if(k.ok){if(!(y.method!=="HEAD"))return{data:"",error:null};let D=kn(k),Z={data:"",response:k,request:y};if(D==="json"||D==="text"){let Y=await k.text(),Zr=await((i=y.jsonParser)!=null?i:vt)(Y);Z.data=Zr}else Z.data=await k[D]();y?.output&&y.output&&!y.disableValidation&&(Z.data=y.output.parse(Z.data));for(let Y of c.onSuccess)Y&&await Y(se(ie({},Z),{response:(a=t?.hookOptions)!=null&&a.cloneResponse?k.clone():k}));return t?.throw?Z.data:{data:Z.data,error:null}}let Qr=(u=t?.jsonParser)!=null?u:vt,lt=await k.text(),qe=Tn(lt)?await Qr(lt):{},Jr={response:k,request:y,error:se(ie({},qe),{status:k.status,statusText:k.statusText})};for(let $ of c.onError)$&&await $(se(ie({},Jr),{response:(s=t?.hookOptions)!=null&&s.cloneResponse?k.clone():k}));if(t?.retry){let $=bn(t.retry),D=(d=t.retryAttempt)!=null?d:0;if(await $.shouldAttemptRetry(D,k)){for(let Y of c.onRetry)Y&&await Y(Ee);let Z=$.getDelay(D);return await new Promise(Y=>setTimeout(Y,Z)),await E(e,se(ie({},t),{retryAttempt:D+1}))}}if(t?.throw)throw new hn(k.status,k.statusText,qe);return{data:null,error:se(ie({},qe),{status:k.status,statusText:k.statusText})}};var Ft=require("better-call"),te=require("jose");var Ot=require("@better-auth/utils/hash"),St=require("@better-auth/utils/base64");async function _t(e){let t=await(0,Ot.createHash)("SHA-256").digest(e);return St.base64Url.encode(new Uint8Array(t),{padding:!1})}function Pe(e){return{tokenType:e.token_type,accessToken:e.access_token,refreshToken:e.refresh_token,accessTokenExpiresAt:e.expires_in?M(e.expires_in,"sec"):void 0,scopes:e?.scope?typeof e.scope=="string"?e.scope.split(" "):e.scope:[],idToken:e.id_token}}async function x({id:e,options:t,authorizationEndpoint:r,state:n,codeVerifier:o,scopes:i,claims:a,redirectURI:u,duration:s}){let d=new URL(r);if(d.searchParams.set("response_type","code"),d.searchParams.set("client_id",t.clientId),d.searchParams.set("state",n),d.searchParams.set("scope",i.join(" ")),d.searchParams.set("redirect_uri",t.redirectURI||u),o){let c=await _t(o);d.searchParams.set("code_challenge_method","S256"),d.searchParams.set("code_challenge",c)}if(a){let c=a.reduce((p,m)=>(p[m]=null,p),{});d.searchParams.set("claims",JSON.stringify({id_token:{email:null,email_verified:null,...c}}))}return s&&d.searchParams.set("duration",s),d}var In=require("jose");async function U({code:e,codeVerifier:t,redirectURI:r,options:n,tokenEndpoint:o,authentication:i}){let a=new URLSearchParams,u={"content-type":"application/x-www-form-urlencoded",accept:"application/json","user-agent":"better-auth"};if(a.set("grant_type","authorization_code"),a.set("code",e),t&&a.set("code_verifier",t),a.set("redirect_uri",r),i==="basic"){let p=btoa(`${n.clientId}:${n.clientSecret}`);u.authorization=`Basic ${p}`}else a.set("client_id",n.clientId),a.set("client_secret",n.clientSecret);let{data:s,error:d}=await E(o,{method:"POST",body:a,headers:u});if(d)throw d;return Pe(s)}var W=require("zod"),Qe=require("better-call");var Ln=require("@better-auth/utils/hash"),Dn=require("@noble/ciphers/chacha"),Ke=require("@noble/ciphers/utils"),Cn=require("@noble/ciphers/webcrypto");function We(e,t){let r=new Uint8Array(e),n=new Uint8Array(t);if(r.length!==n.length)return!1;let o=0;for(let i=0;i<r.length;i++)o|=r[i]^n[i];return o===0}var Pn=require("@better-auth/utils/hash");var It=require("jose");async function Pt(e,t,r=3600){return await new It.SignJWT(e).setProtectedHeader({alg:"HS256"}).setIssuedAt().setExpirationTime(Math.floor(Date.now()/1e3)+r).sign(new TextEncoder().encode(t))}var Lt=require("@noble/hashes/scrypt"),Dt=require("uncrypto"),Ge=require("@better-auth/utils/hex"),ue={N:16384,r:16,p:1,dkLen:64};async function Ct(e,t){return await(0,Lt.scryptAsync)(e.normalize("NFKC"),t,{N:ue.N,p:ue.p,r:ue.r,dkLen:ue.dkLen,maxmem:128*ue.N*ue.r*2})}var Nt=async e=>{let t=Ge.hex.encode((0,Dt.getRandomValues)(new Uint8Array(16))),r=await Ct(e,t);return`${t}:${Ge.hex.encode(r)}`},Bt=async({hash:e,password:t})=>{let[r,n]=e.split(":"),o=await Ct(t,r);return We(o,new Uint8Array(Buffer.from(n,"hex")))};var jt=require("@better-auth/utils/random"),Re=(0,jt.createRandomStringGenerator)("a-z","0-9","A-Z","-_");async function ke(e,t){let r=e.body?.callbackURL||(e.query?.currentURL?gt(e.query?.currentURL):"")||e.context.options.baseURL;if(!r)throw new Qe.APIError("BAD_REQUEST",{message:"callbackURL is required"});let n=Re(128),o=Re(32),i=JSON.stringify({callbackURL:r,codeVerifier:n,errorURL:e.body?.errorCallbackURL||e.query?.currentURL,newUserURL:e.body?.newUserCallbackURL,link:t,expiresAt:Date.now()+10*60*1e3}),a=new Date;a.setMinutes(a.getMinutes()+10);let u=await e.context.internalAdapter.createVerificationValue({value:i,identifier:o,expiresAt:a});if(!u)throw e.context.logger.error("Unable to create verification. Make sure the database adapter is properly working and there is a verification table in the database"),new Qe.APIError("INTERNAL_SERVER_ERROR",{message:"Unable to create verification"});return{state:u.identifier,codeVerifier:n}}async function Je(e){let t=e.query.state||e.body.state,r=await e.context.internalAdapter.findVerificationValue(t);if(!r)throw e.context.logger.error("State Mismatch. Verification not found",{state:t}),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);let n=W.z.object({callbackURL:W.z.string(),codeVerifier:W.z.string(),errorURL:W.z.string().optional(),newUserURL:W.z.string().optional(),expiresAt:W.z.number(),link:W.z.object({email:W.z.string(),userId:W.z.string()}).optional()}).parse(JSON.parse(r.value));if(n.errorURL||(n.errorURL=`${e.context.baseURL}/error`),n.expiresAt<Date.now())throw await e.context.internalAdapter.deleteVerificationValue(r.id),e.context.logger.error("State expired.",{state:t}),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);return await e.context.internalAdapter.deleteVerificationValue(r.id),n}var qt=e=>{let t="https://appleid.apple.com/auth/token";return{id:"apple",name:"Apple",createAuthorizationURL({state:r,scopes:n,redirectURI:o}){let i=n||["email","name"];return e.scope&&i.push(...e.scope),new URL(`https://appleid.apple.com/auth/authorize?client_id=${e.clientId}&response_type=code&redirect_uri=${e.redirectURI||o}&scope=${i.join(" ")}&state=${r}&response_mode=form_post`)},validateAuthorizationCode:async({code:r,codeVerifier:n,redirectURI:o})=>U({code:r,codeVerifier:n,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:t}),async verifyIdToken(r,n){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(r,n);let o=(0,te.decodeProtectedHeader)(r),{kid:i,alg:a}=o;if(!i||!a)return!1;let u=await Nn(i),{payload:s}=await(0,te.jwtVerify)(r,u,{algorithms:[a],issuer:"https://appleid.apple.com",audience:e.appBundleIdentifier||e.clientId,maxTokenAge:"1h"});return["email_verified","is_private_email"].forEach(d=>{s[d]!==void 0&&(s[d]=!!s[d])}),n&&s.nonce!==n?!1:!!s},async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);if(!r.idToken)return null;let n=(0,te.decodeJwt)(r.idToken);if(!n)return null;let o=n.user?`${n.user.name.firstName} ${n.user.name.lastName}`:n.email,i=await e.mapProfileToUser?.(n);return{user:{id:n.sub,name:o,emailVerified:!1,email:n.email,...i},data:n}}}},Nn=async e=>{let t="https://appleid.apple.com",r="/auth/keys",{data:n}=await E(`${t}${r}`);if(!n?.keys)throw new Ft.APIError("BAD_REQUEST",{message:"Keys not found"});let o=n.keys.find(i=>i.kid===e);if(!o)throw new Error(`JWK with kid ${e} not found`);return await(0,te.importJWK)(o,o.alg)};var $t=e=>({id:"discord",name:"Discord",createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["identify","email"];return e.scope&&o.push(...e.scope),new URL(`https://discord.com/api/oauth2/authorize?scope=${o.join("+")}&response_type=code&client_id=${e.clientId}&redirect_uri=${encodeURIComponent(e.redirectURI||n)}&state=${t}&prompt=${e.prompt||"none"}`)},validateAuthorizationCode:async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://discord.com/api/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await E("https://discord.com/api/users/@me",{headers:{authorization:`Bearer ${t.accessToken}`}});if(n)return null;if(r.avatar===null){let i=r.discriminator==="0"?Number(BigInt(r.id)>>BigInt(22))%6:parseInt(r.discriminator)%5;r.image_url=`https://cdn.discordapp.com/embed/avatars/${i}.png`}else{let i=r.avatar.startsWith("a_")?"gif":"png";r.image_url=`https://cdn.discordapp.com/avatars/${r.id}/${r.avatar}.${i}`}let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.display_name||r.username||"",email:r.email,emailVerified:r.verified,image:r.image_url,...o},data:r}}});var Vt=e=>({id:"facebook",name:"Facebook",async createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["email","public_profile"];return e.scope&&o.push(...e.scope),await x({id:"facebook",options:e,authorizationEndpoint:"https://www.facebook.com/v21.0/dialog/oauth",scopes:o,state:t,redirectURI:n})},validateAuthorizationCode:async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://graph.facebook.com/oauth/access_token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await E("https://graph.facebook.com/me?fields=id,name,email,picture",{auth:{type:"Bearer",token:t.accessToken}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.name,email:r.email,image:r.picture.data.url,emailVerified:r.email_verified,...o},data:r}}});var Mt=e=>{let t="https://github.com/login/oauth/access_token";return{id:"github",name:"GitHub",createAuthorizationURL({state:r,scopes:n,codeVerifier:o,redirectURI:i}){let a=n||["user:email"];return e.scope&&a.push(...e.scope),x({id:"github",options:e,authorizationEndpoint:"https://github.com/login/oauth/authorize",scopes:a,state:r,redirectURI:i})},validateAuthorizationCode:async({code:r,redirectURI:n})=>U({code:r,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:t}),async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);let{data:n,error:o}=await E("https://api.github.com/user",{headers:{"User-Agent":"better-auth",authorization:`Bearer ${r.accessToken}`}});if(o)return null;let i=!1,{data:a}=await E("https://api.github.com/user/emails",{headers:{authorization:`Bearer ${r.accessToken}`,"User-Agent":"better-auth"}});a&&(n.email=(a.find(s=>s.primary)??a[0])?.email,i=a.find(s=>s.email===n.email)?.verified??!1);let u=await e.mapProfileToUser?.(n);return{user:{id:n.id.toString(),name:n.name||n.login,email:n.email,image:n.avatar_url,emailVerified:i,...u},data:n}}}};var Le=["info","success","warn","error","debug"];function zt(e,t){return Le.indexOf(t)<=Le.indexOf(e)}var G={reset:"\x1B[0m",bright:"\x1B[1m",dim:"\x1B[2m",underscore:"\x1B[4m",blink:"\x1B[5m",reverse:"\x1B[7m",hidden:"\x1B[8m",fg:{black:"\x1B[30m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m"},bg:{black:"\x1B[40m",red:"\x1B[41m",green:"\x1B[42m",yellow:"\x1B[43m",blue:"\x1B[44m",magenta:"\x1B[45m",cyan:"\x1B[46m",white:"\x1B[47m"}},Bn={info:G.fg.blue,success:G.fg.green,warn:G.fg.yellow,error:G.fg.red,debug:G.fg.magenta},jn=(e,t)=>{let r=new Date().toISOString();return`${G.dim}${r}${G.reset} ${Bn[e]}${e.toUpperCase()}${G.reset} ${G.bright}[Better Auth]:${G.reset} ${t}`},Te=e=>{let t=e?.disabled!==!0,r=e?.level??"error",n=(o,i,a=[])=>{if(!t||!zt(r,o))return;let u=jn(o,i);if(!e||typeof e.log!="function"){o==="error"?console.error(u,...a):o==="warn"?console.warn(u,...a):console.log(u,...a);return}e.log(o==="success"?"info":o,u,...a)};return Object.fromEntries(Le.map(o=>[o,(...[i,...a])=>n(o,i,a)]))},N=Te();var Ht=require("jose"),Wt=e=>({id:"google",name:"Google",async createAuthorizationURL({state:t,scopes:r,codeVerifier:n,redirectURI:o}){if(!e.clientId||!e.clientSecret)throw N.error("Client Id and Client Secret is required for Google. Make sure to provide them in the options."),new B("CLIENT_ID_AND_SECRET_REQUIRED");if(!n)throw new B("codeVerifier is required for Google");let i=r||["email","profile","openid"];e.scope&&i.push(...e.scope);let a=await x({id:"google",options:e,authorizationEndpoint:"https://accounts.google.com/o/oauth2/auth",scopes:i,state:t,codeVerifier:n,redirectURI:o});return e.accessType&&a.searchParams.set("access_type",e.accessType),e.prompt&&a.searchParams.set("prompt",e.prompt),a},validateAuthorizationCode:async({code:t,codeVerifier:r,redirectURI:n})=>U({code:t,codeVerifier:r,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://oauth2.googleapis.com/token"}),async verifyIdToken(t,r){if(e.disableIdTokenSignIn)return!1;if(e.verifyIdToken)return e.verifyIdToken(t,r);let n=`https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=${t}`,{data:o}=await E(n);return o?o.aud===e.clientId&&o.iss==="https://accounts.google.com":!1},async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);if(!t.idToken)return null;let r=(0,Ht.decodeJwt)(t.idToken),n=await e.mapProfileToUser?.(r);return{user:{id:r.sub,name:r.name,email:r.email,image:r.picture,emailVerified:r.email_verified,...n},data:r}}});var Gt=require("jose"),Kt=e=>{let t=e.tenantId||"common",r=`https://login.microsoftonline.com/${t}/oauth2/v2.0/authorize`,n=`https://login.microsoftonline.com/${t}/oauth2/v2.0/token`;return{id:"microsoft",name:"Microsoft EntraID",createAuthorizationURL(o){let i=o.scopes||["openid","profile","email","User.Read"];return e.scope&&i.push(...e.scope),x({id:"microsoft",options:e,authorizationEndpoint:r,state:o.state,codeVerifier:o.codeVerifier,scopes:i,redirectURI:o.redirectURI})},validateAuthorizationCode({code:o,codeVerifier:i,redirectURI:a}){return U({code:o,codeVerifier:i,redirectURI:e.redirectURI||a,options:e,tokenEndpoint:n})},async getUserInfo(o){if(e.getUserInfo)return e.getUserInfo(o);if(!o.idToken)return null;let i=(0,Gt.decodeJwt)(o.idToken),a=e.profilePhotoSize||48;await E(`https://graph.microsoft.com/v1.0/me/photos/${a}x${a}/$value`,{headers:{Authorization:`Bearer ${o.accessToken}`},async onResponse(s){if(!(e.disableProfilePhoto||!s.response.ok))try{let c=await s.response.clone().arrayBuffer(),p=Buffer.from(c).toString("base64");i.picture=`data:image/jpeg;base64, ${p}`}catch(d){N.error(d&&typeof d=="object"&&"name"in d?d.name:"",d)}}});let u=await e.mapProfileToUser?.(i);return{user:{id:i.sub,name:i.name,email:i.email,image:i.picture,emailVerified:!0,...u},data:i}}}};var Qt=e=>({id:"spotify",name:"Spotify",createAuthorizationURL({state:t,scopes:r,codeVerifier:n,redirectURI:o}){let i=r||["user-read-email"];return e.scope&&i.push(...e.scope),x({id:"spotify",options:e,authorizationEndpoint:"https://accounts.spotify.com/authorize",scopes:i,state:t,codeVerifier:n,redirectURI:o})},validateAuthorizationCode:async({code:t,codeVerifier:r,redirectURI:n})=>U({code:t,codeVerifier:r,redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://accounts.spotify.com/api/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await E("https://api.spotify.com/v1/me",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.display_name,email:r.email,image:r.images[0]?.url,emailVerified:!1,...o},data:r}}});function Fn(e){return e.charAt(0).toUpperCase()+e.slice(1)}var ae={isAction:!1};var Jt=require("@better-auth/utils/random"),H=e=>(0,Jt.createRandomStringGenerator)("a-z","A-Z","0-9")(e||32);var Zt=require("jose"),Yt=e=>({id:"twitch",name:"Twitch",createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["user:read:email","openid"];return e.scope&&o.push(...e.scope),x({id:"twitch",redirectURI:n,options:e,authorizationEndpoint:"https://id.twitch.tv/oauth2/authorize",scopes:o,state:t,claims:e.claims||["email","email_verified","preferred_username","picture"]})},validateAuthorizationCode:async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://id.twitch.tv/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let r=t.idToken;if(!r)return N.error("No idToken found in token"),null;let n=(0,Zt.decodeJwt)(r),o=await e.mapProfileToUser?.(n);return{user:{id:n.sub,name:n.preferred_username,email:n.email,image:n.picture,emailVerified:!1,...o},data:n}}});var Xt=e=>({id:"twitter",name:"Twitter",createAuthorizationURL(t){let r=t.scopes||["users.read","tweet.read","offline.access"];return e.scope&&r.push(...e.scope),x({id:"twitter",options:e,authorizationEndpoint:"https://x.com/i/oauth2/authorize",scopes:r,state:t.state,codeVerifier:t.codeVerifier,redirectURI:t.redirectURI})},validateAuthorizationCode:async({code:t,codeVerifier:r,redirectURI:n})=>U({code:t,codeVerifier:r,authentication:"basic",redirectURI:e.redirectURI||n,options:e,tokenEndpoint:"https://api.x.com/2/oauth2/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await E("https://api.x.com/2/users/me?user.fields=profile_image_url",{method:"GET",headers:{Authorization:`Bearer ${t.accessToken}`}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.data.id,name:r.data.name,email:r.data.username||null,image:r.data.profile_image_url,emailVerified:r.data.verified||!1,...o},data:r}}});var er=e=>{let t="https://api.dropboxapi.com/oauth2/token";return{id:"dropbox",name:"Dropbox",createAuthorizationURL:async({state:r,scopes:n,codeVerifier:o,redirectURI:i})=>{let a=n||["account_info.read"];return e.scope&&a.push(...e.scope),await x({id:"dropbox",options:e,authorizationEndpoint:"https://www.dropbox.com/oauth2/authorize",scopes:a,state:r,redirectURI:i,codeVerifier:o})},validateAuthorizationCode:async({code:r,codeVerifier:n,redirectURI:o})=>await U({code:r,codeVerifier:n,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:t}),async getUserInfo(r){if(e.getUserInfo)return e.getUserInfo(r);let{data:n,error:o}=await E("https://api.dropboxapi.com/2/users/get_current_account",{method:"POST",headers:{Authorization:`Bearer ${r.accessToken}`}});if(o)return null;let i=await e.mapProfileToUser?.(n);return{user:{id:n.account_id,name:n.name?.display_name,email:n.email,emailVerified:n.email_verified||!1,image:n.profile_photo_url,...i},data:n}}}};var tr=e=>{let t="https://www.linkedin.com/oauth/v2/authorization",r="https://www.linkedin.com/oauth/v2/accessToken";return{id:"linkedin",name:"Linkedin",createAuthorizationURL:async({state:n,scopes:o,redirectURI:i})=>{let a=o||["profile","email","openid"];return e.scope&&a.push(...e.scope),await x({id:"linkedin",options:e,authorizationEndpoint:t,scopes:a,state:n,redirectURI:i})},validateAuthorizationCode:async({code:n,redirectURI:o})=>await U({code:n,redirectURI:e.redirectURI||o,options:e,tokenEndpoint:r}),async getUserInfo(n){let{data:o,error:i}=await E("https://api.linkedin.com/v2/userinfo",{method:"GET",headers:{Authorization:`Bearer ${n.accessToken}`}});if(i)return null;let a=await e.mapProfileToUser?.(o);return{user:{id:o.sub,name:o.name,email:o.email,emailVerified:o.email_verified||!1,image:o.picture,...a},data:o}}}};var Ze=(e="")=>e.split("://").map(t=>t.replace(/\/{2,}/g,"/")).join("://"),qn=e=>{let t=e||"https://gitlab.com";return{authorizationEndpoint:Ze(`${t}/oauth/authorize`),tokenEndpoint:Ze(`${t}/oauth/token`),userinfoEndpoint:Ze(`${t}/api/v4/user`)}},rr=e=>{let{authorizationEndpoint:t,tokenEndpoint:r,userinfoEndpoint:n}=qn(e.issuer),o="gitlab";return{id:o,name:"Gitlab",createAuthorizationURL:async({state:a,scopes:u,codeVerifier:s,redirectURI:d})=>{let c=u||["read_user"];return e.scope&&c.push(...e.scope),await x({id:o,options:e,authorizationEndpoint:t,scopes:c,state:a,redirectURI:d,codeVerifier:s})},validateAuthorizationCode:async({code:a,redirectURI:u,codeVerifier:s})=>U({code:a,redirectURI:e.redirectURI||u,options:e,codeVerifier:s,tokenEndpoint:r}),async getUserInfo(a){if(e.getUserInfo)return e.getUserInfo(a);let{data:u,error:s}=await E(n,{headers:{authorization:`Bearer ${a.accessToken}`}});if(s||u.state!=="active"||u.locked)return null;let d=await e.mapProfileToUser?.(u);return{user:{id:u.id.toString(),name:u.name??u.username,email:u.email,image:u.avatar_url,emailVerified:!0,...d},data:u}}}};var nr=e=>({id:"reddit",name:"Reddit",createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["identity"];return e.scope&&o.push(...e.scope),x({id:"reddit",options:e,authorizationEndpoint:"https://www.reddit.com/api/v1/authorize",scopes:o,state:t,redirectURI:n,duration:e.duration})},validateAuthorizationCode:async({code:t,redirectURI:r})=>{let n=new URLSearchParams({grant_type:"authorization_code",code:t,redirect_uri:e.redirectURI||r}),o={"content-type":"application/x-www-form-urlencoded",accept:"text/plain","user-agent":"better-auth",Authorization:`Basic ${Buffer.from(`${e.clientId}:${e.clientSecret}`).toString("base64")}`},{data:i,error:a}=await E("https://www.reddit.com/api/v1/access_token",{method:"POST",headers:o,body:n.toString()});if(a)throw a;return Pe(i)},async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await E("https://oauth.reddit.com/api/v1/me",{headers:{Authorization:`Bearer ${t.accessToken}`,"User-Agent":"better-auth"}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.id,name:r.name,email:r.oauth_client_id,emailVerified:r.has_verified_email,image:r.icon_img?.split("?")[0],...o},data:r}}});var or=e=>({id:"roblox",name:"Roblox",createAuthorizationURL({state:t,scopes:r,redirectURI:n}){let o=r||["openid","profile"];return e.scope&&o.push(...e.scope),new URL(`https://apis.roblox.com/oauth/v1/authorize?scope=${o.join("+")}&response_type=code&client_id=${e.clientId}&redirect_uri=${encodeURIComponent(e.redirectURI||n)}&state=${t}&prompt=${e.prompt||"select_account+consent"}`)},validateAuthorizationCode:async({code:t,redirectURI:r})=>U({code:t,redirectURI:e.redirectURI||r,options:e,tokenEndpoint:"https://apis.roblox.com/oauth/v1/token"}),async getUserInfo(t){if(e.getUserInfo)return e.getUserInfo(t);let{data:r,error:n}=await E("https://apis.roblox.com/oauth/v1/userinfo",{headers:{authorization:`Bearer ${t.accessToken}`}});if(n)return null;let o=await e.mapProfileToUser?.(r);return{user:{id:r.sub,name:r.nickname||r.preferred_username||"",image:r.picture,email:"",emailVerified:!0,...o},data:{image:r.picture,...r}}}});var ir=require("zod"),Ye={apple:qt,discord:$t,facebook:Vt,github:Mt,microsoft:Kt,google:Wt,spotify:Qt,twitch:Yt,twitter:Xt,dropbox:er,linkedin:tr,gitlab:rr,reddit:nr,roblox:or},Xe=Object.keys(Ye),sr=ir.z.enum(Xe,{description:"OAuth2 provider to use"});var V=require("zod");var pe=require("better-call");var K=require("better-call");var re=require("zod");function le(e){try{return JSON.parse(e)}catch{return null}}var w={USER_NOT_FOUND:"User not found",FAILED_TO_CREATE_USER:"Failed to create user",FAILED_TO_CREATE_SESSION:"Failed to create session",FAILED_TO_UPDATE_USER:"Failed to update user",FAILED_TO_GET_SESSION:"Failed to get session",INVALID_PASSWORD:"Invalid password",INVALID_EMAIL:"Invalid email",INVALID_EMAIL_OR_PASSWORD:"Invalid email or password",SOCIAL_ACCOUNT_ALREADY_LINKED:"Social account already linked",PROVIDER_NOT_FOUND:"Provider not found",INVALID_TOKEN:"invalid token",ID_TOKEN_NOT_SUPPORTED:"id_token not supported",FAILED_TO_GET_USER_INFO:"Failed to get user info",USER_EMAIL_NOT_FOUND:"User email not found",EMAIL_NOT_VERIFIED:"Email not verified",PASSWORD_TOO_SHORT:"Password too short",PASSWORD_TOO_LONG:"Password too long",USER_ALREADY_EXISTS:"User already exists",EMAIL_CAN_NOT_BE_UPDATED:"Email can not be updated",CREDENTIAL_ACCOUNT_NOT_FOUND:"Credential account not found",SESSION_EXPIRED:"Session expired. Re-authenticate to perform this action."};var ar=require("@better-auth/utils/hmac"),dr=require("@better-auth/utils/base64"),cr=require("@better-auth/utils/binary"),et=()=>v("/get-session",{method:"GET",query:re.z.optional(re.z.object({disableCookieCache:re.z.boolean({description:"Disable cookie cache and fetch session from database"}).or(re.z.string().transform(e=>e==="true")).optional(),disableRefresh:re.z.boolean({description:"Disable session refresh. Useful for checking session status, without updating the session"}).optional()})),requireHeaders:!0,metadata:{openapi:{description:"Get the current session",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{session:{type:"object",properties:{token:{type:"string"},userId:{type:"string"},expiresAt:{type:"string"}}},user:{type:"object",$ref:"#/components/schemas/User"}}}}}}}}}},async e=>{try{let t=await e.getSignedCookie(e.context.authCookies.sessionToken.name,e.context.secret);if(!t)return e.json(null);let r=e.getCookie(e.context.authCookies.sessionData.name),n=r?le(cr.binary.decode(dr.base64.decode(r))):null;if(n&&!await(0,ar.createHMAC)("SHA-256","base64urlnopad").verify(e.context.secret,JSON.stringify(n.session),n.signature))return z(e),e.json(null);let o=await e.getSignedCookie(e.context.authCookies.dontRememberToken.name,e.context.secret);if(n?.session&&e.context.options.session?.cookieCache?.enabled&&!e.query?.disableCookieCache){let c=n.session;if(n.expiresAt<Date.now()||c.session.expiresAt<new Date){let m=e.context.authCookies.sessionData.name;e.setCookie(m,"",{maxAge:0})}else return e.json(c)}let i=await e.context.internalAdapter.findSession(t);if(e.context.session=i,!i||i.session.expiresAt<new Date)return z(e),i&&await e.context.internalAdapter.deleteSession(i.session.token),e.json(null);if(o||e.query?.disableRefresh)return e.json(i);let a=e.context.sessionConfig.expiresIn,u=e.context.sessionConfig.updateAge;if(i.session.expiresAt.valueOf()-a*1e3+u*1e3<=Date.now()){let c=await e.context.internalAdapter.updateSession(i.session.token,{expiresAt:M(e.context.sessionConfig.expiresIn,"sec")});if(!c)return z(e),e.json(null,{status:401});let p=(c.expiresAt.valueOf()-Date.now())/1e3;return await C(e,{session:c,user:i.user},!1,{maxAge:p}),e.json({session:c,user:i.user})}return await Ie(e,i),e.json(i)}catch(t){throw e.context.logger.error("INTERNAL_SERVER_ERROR",t),new K.APIError("INTERNAL_SERVER_ERROR",{message:w.FAILED_TO_GET_SESSION})}}),de=async(e,t)=>{if(e.context.session)return e.context.session;let r=await et()({...e,_flag:"json",headers:e.headers,query:t}).catch(n=>null);return e.context.session=r,r},F=he(async e=>{let t=await de(e);if(!t?.session)throw new K.APIError("UNAUTHORIZED");return{session:t}}),Ks=he(async e=>{let t=await de(e);if(!t?.session)throw new K.APIError("UNAUTHORIZED");if(e.context.sessionConfig.freshAge===0)return{session:t};let r=e.context.sessionConfig.freshAge,n=t.session.updatedAt?.valueOf()||t.session.createdAt.valueOf();if(!(Date.now()-n<r*1e3))throw new K.APIError("FORBIDDEN",{message:"Session is not fresh"});return{session:t}}),ur=()=>v("/list-sessions",{method:"GET",use:[F],requireHeaders:!0,metadata:{openapi:{description:"List all active sessions for the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{token:{type:"string"},userId:{type:"string"},expiresAt:{type:"string"}}}}}}}}}}},async e=>{let r=(await e.context.internalAdapter.listSessions(e.context.session.user.id)).filter(n=>n.expiresAt>new Date);return e.json(r)}),lr=v("/revoke-session",{method:"POST",body:re.z.object({token:re.z.string({description:"The token to revoke"})}),use:[F],requireHeaders:!0,metadata:{openapi:{description:"Revoke a single session",requestBody:{content:{"application/json":{schema:{type:"object",properties:{token:{type:"string"}},required:["token"]}}}}}}},async e=>{let t=e.body.token,r=await e.context.internalAdapter.findSession(t);if(!r)throw new K.APIError("BAD_REQUEST",{message:"Session not found"});if(r.session.userId!==e.context.session.user.id)throw new K.APIError("UNAUTHORIZED");try{await e.context.internalAdapter.deleteSession(t)}catch(n){throw e.context.logger.error(n&&typeof n=="object"&&"name"in n?n.name:"",n),new K.APIError("INTERNAL_SERVER_ERROR")}return e.json({status:!0})}),pr=v("/revoke-sessions",{method:"POST",use:[F],requireHeaders:!0,metadata:{openapi:{description:"Revoke all sessions for the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}},required:["status"]}}}}}}}},async e=>{try{await e.context.internalAdapter.deleteSessions(e.context.session.user.id)}catch(t){throw e.context.logger.error(t&&typeof t=="object"&&"name"in t?t.name:"",t),new K.APIError("INTERNAL_SERVER_ERROR")}return e.json({status:!0})}),fr=v("/revoke-other-sessions",{method:"POST",requireHeaders:!0,use:[F],metadata:{openapi:{description:"Revoke all other sessions for the user except the current one",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{let t=e.context.session;if(!t.user)throw new K.APIError("UNAUTHORIZED");let o=(await e.context.internalAdapter.listSessions(t.user.id)).filter(i=>i.expiresAt>new Date).filter(i=>i.token!==e.context.session.session.token);return await Promise.all(o.map(i=>e.context.internalAdapter.deleteSession(i.token))),e.json({status:!0})});var mr=require("jose");async function Q(e,t,r){return await Pt({email:t.toLowerCase(),updateTo:r},e)}async function $n(e,t){if(!e.context.options.emailVerification?.sendVerificationEmail)throw e.context.logger.error("Verification email isn't enabled."),new pe.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let r=await Q(e.context.secret,t.email),n=`${e.context.baseURL}/verify-email?token=${r}&callbackURL=${e.body.callbackURL||e.query?.currentURL||"/"}`;await e.context.options.emailVerification.sendVerificationEmail({user:t,url:n,token:r},e.request)}var gr=v("/send-verification-email",{method:"POST",query:V.z.object({currentURL:V.z.string({description:"The URL to use for email verification callback"}).optional()}).optional(),body:V.z.object({email:V.z.string({description:"The email to send the verification email to"}).email(),callbackURL:V.z.string({description:"The URL to use for email verification callback"}).optional()}),metadata:{openapi:{description:"Send a verification email to the user",requestBody:{content:{"application/json":{schema:{type:"object",properties:{email:{type:"string",description:"The email to send the verification email to"},callbackURL:{type:"string",description:"The URL to use for email verification callback"}},required:["email"]}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.emailVerification?.sendVerificationEmail)throw e.context.logger.error("Verification email isn't enabled."),new pe.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let{email:t}=e.body,r=await e.context.internalAdapter.findUserByEmail(t);if(!r)throw new pe.APIError("BAD_REQUEST",{message:w.USER_NOT_FOUND});return await $n(e,r.user),e.json({status:!0})}),hr=v("/verify-email",{method:"GET",query:V.z.object({token:V.z.string({description:"The token to verify the email"}),callbackURL:V.z.string({description:"The URL to redirect to after email verification"}).optional()}),metadata:{openapi:{description:"Verify the email of the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},status:{type:"boolean"}},required:["user","status"]}}}}}}}},async e=>{function t(u){throw e.query.callbackURL?e.query.callbackURL.includes("?")?e.redirect(`${e.query.callbackURL}&error=${u}`):e.redirect(`${e.query.callbackURL}?error=${u}`):new pe.APIError("UNAUTHORIZED",{message:u})}let{token:r}=e.query,n;try{n=await(0,mr.jwtVerify)(r,new TextEncoder().encode(e.context.secret),{algorithms:["HS256"]})}catch(u){return e.context.logger.error("Failed to verify email",u),t("invalid_token")}let i=V.z.object({email:V.z.string().email(),updateTo:V.z.string().optional()}).parse(n.payload),a=await e.context.internalAdapter.findUserByEmail(i.email);if(!a)return t("user_not_found");if(i.updateTo){let u=await de(e);if(!u){if(e.query.callbackURL)throw e.redirect(`${e.query.callbackURL}?error=unauthorized`);return t("unauthorized")}if(u.user.email!==i.email){if(e.query.callbackURL)throw e.redirect(`${e.query.callbackURL}?error=unauthorized`);return t("unauthorized")}let s=await e.context.internalAdapter.updateUserByEmail(i.email,{email:i.updateTo,emailVerified:!1}),d=await Q(e.context.secret,i.updateTo);if(await e.context.options.emailVerification?.sendVerificationEmail?.({user:s,url:`${e.context.baseURL}/verify-email?token=${d}`,token:d},e.request),e.query.callbackURL)throw e.redirect(e.query.callbackURL);return e.json({status:!0})}if(await e.context.internalAdapter.updateUserByEmail(i.email,{emailVerified:!0}),e.context.options.emailVerification?.autoSignInAfterVerification){let u=await de(e);if(!u||u.user.email!==i.email){let s=await e.context.internalAdapter.createSession(a.user.id,e.request);if(!s)throw new pe.APIError("INTERNAL_SERVER_ERROR",{message:"Failed to create session"});await C(e,{session:s,user:a.user})}}if(e.query.callbackURL)throw e.redirect(e.query.callbackURL);return e.json({status:!0})});async function De(e,{userInfo:t,account:r,callbackURL:n}){let o=await e.context.internalAdapter.findOAuthUser(t.email.toLowerCase(),r.accountId,r.providerId).catch(s=>{throw N.error(`Better auth was unable to query your database.
Error: `,s),e.redirect(`${e.context.baseURL}/error?error=internal_server_error`)}),i=o?.user,a=!i;if(o){let s=o.accounts.find(d=>d.providerId===r.providerId);if(s){let d=Object.fromEntries(Object.entries({accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}).filter(([c,p])=>p!==void 0));Object.keys(d).length>0&&await e.context.internalAdapter.updateAccount(s.id,d)}else{if(!e.context.options.account?.accountLinking?.trustedProviders?.includes(r.providerId)&&!t.emailVerified||e.context.options.account?.accountLinking?.enabled===!1)return Se&&N.warn(`User already exist but account isn't linked to ${r.providerId}. To read more about how account linking works in Better Auth see https://www.better-auth.com/docs/concepts/users-accounts#account-linking.`),{error:"account not linked",data:null};try{await e.context.internalAdapter.linkAccount({providerId:r.providerId,accountId:t.id.toString(),userId:o.user.id,accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt,scope:r.scope})}catch(p){return N.error("Unable to link account",p),{error:"unable to link account",data:null}}}}else try{if(i=await e.context.internalAdapter.createOAuthUser({...t,email:t.email.toLowerCase(),id:void 0},{accessToken:r.accessToken,idToken:r.idToken,refreshToken:r.refreshToken,accessTokenExpiresAt:r.accessTokenExpiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt,scope:r.scope,providerId:r.providerId,accountId:t.id.toString()}).then(s=>s?.user),!t.emailVerified&&i&&e.context.options.emailVerification?.sendOnSignUp){let s=await Q(e.context.secret,i.email),d=`${e.context.baseURL}/verify-email?token=${s}&callbackURL=${n}`;await e.context.options.emailVerification?.sendVerificationEmail?.({user:i,url:d,token:s},e.request)}}catch(s){return s instanceof tt.APIError?{error:s.message,data:null,isRegister:!1}:{error:"unable to create user",data:null,isRegister:!1}}if(!i)return{error:"unable to create user",data:null,isRegister:!1};let u=await e.context.internalAdapter.createSession(i.id,e.request);return u?{data:{session:u,user:i},error:null,isRegister:a}:{error:"unable to create session",data:null,isRegister:!1}}var yr=v("/sign-in/social",{method:"POST",query:I.z.object({currentURL:I.z.string().optional()}).optional(),body:I.z.object({callbackURL:I.z.string({description:"Callback URL to redirect to after the user has signed in"}).optional(),newUserCallbackURL:I.z.string().optional(),errorCallbackURL:I.z.string({description:"Callback URL to redirect to if an error happens"}).optional(),provider:sr,disableRedirect:I.z.boolean({description:"Disable automatic redirection to the provider. Useful for handling the redirection yourself"}).optional(),idToken:I.z.optional(I.z.object({token:I.z.string({description:"ID token from the provider"}),nonce:I.z.string({description:"Nonce used to generate the token"}).optional(),accessToken:I.z.string({description:"Access token from the provider"}).optional(),refreshToken:I.z.string({description:"Refresh token from the provider"}).optional(),expiresAt:I.z.number({description:"Expiry date of the token"}).optional()}),{description:"ID token from the provider to sign in the user with id token"})}),metadata:{openapi:{description:"Sign in with a social provider",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{session:{type:"string"},user:{type:"object"},url:{type:"string"},redirect:{type:"boolean"}},required:["session","user","url","redirect"]}}}}}}}},async e=>{let t=e.context.socialProviders.find(i=>i.id===e.body.provider);if(!t)throw e.context.logger.error("Provider not found. Make sure to add the provider in your auth config",{provider:e.body.provider}),new L.APIError("NOT_FOUND",{message:w.PROVIDER_NOT_FOUND});if(e.body.idToken){if(!t.verifyIdToken)throw e.context.logger.error("Provider does not support id token verification",{provider:e.body.provider}),new L.APIError("NOT_FOUND",{message:w.ID_TOKEN_NOT_SUPPORTED});let{token:i,nonce:a}=e.body.idToken;if(!await t.verifyIdToken(i,a))throw e.context.logger.error("Invalid id token",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:w.INVALID_TOKEN});let s=await t.getUserInfo({idToken:i,accessToken:e.body.idToken.accessToken,refreshToken:e.body.idToken.refreshToken});if(!s||!s?.user)throw e.context.logger.error("Failed to get user info",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:w.FAILED_TO_GET_USER_INFO});if(!s.user.email)throw e.context.logger.error("User email not found",{provider:e.body.provider}),new L.APIError("UNAUTHORIZED",{message:w.USER_EMAIL_NOT_FOUND});let d=await De(e,{userInfo:{email:s.user.email,id:s.user.id,name:s.user.name||"",image:s.user.image,emailVerified:s.user.emailVerified||!1},account:{providerId:t.id,accountId:s.user.id,accessToken:e.body.idToken.accessToken}});if(d.error)throw new L.APIError("UNAUTHORIZED",{message:d.error});return await C(e,d.data),e.json({token:d.data.session.token,url:void 0,redirect:!1})}let{codeVerifier:r,state:n}=await ke(e),o=await t.createAuthorizationURL({state:n,codeVerifier:r,redirectURI:`${e.context.baseURL}/callback/${t.id}`});return e.json({url:o.toString(),redirect:!e.body.disableRedirect})}),wr=v("/sign-in/email",{method:"POST",body:I.z.object({email:I.z.string({description:"Email of the user"}),password:I.z.string({description:"Password of the user"}),callbackURL:I.z.string({description:"Callback URL to use as a redirect for email verification"}).optional(),rememberMe:I.z.boolean({description:"If this is false, the session will not be remembered. Default is `true`."}).default(!0).optional()}),metadata:{openapi:{description:"Sign in with email and password",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},url:{type:"string"},redirect:{type:"boolean"}},required:["session","user","url","redirect"]}}}}}}}},async e=>{if(!e.context.options?.emailAndPassword?.enabled)throw e.context.logger.error("Email and password is not enabled. Make sure to enable it in the options on you `auth.ts` file. Check `https://better-auth.com/docs/authentication/email-password` for more!"),new L.APIError("BAD_REQUEST",{message:"Email and password is not enabled"});let{email:t,password:r}=e.body;if(!I.z.string().email().safeParse(t).success)throw new L.APIError("BAD_REQUEST",{message:w.INVALID_EMAIL});let o=await e.context.internalAdapter.findUserByEmail(t,{includeAccounts:!0});if(!o)throw await e.context.password.hash(r),e.context.logger.error("User not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:w.INVALID_EMAIL_OR_PASSWORD});let i=o.accounts.find(d=>d.providerId==="credential");if(!i)throw e.context.logger.error("Credential account not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:w.INVALID_EMAIL_OR_PASSWORD});let a=i?.password;if(!a)throw e.context.logger.error("Password not found",{email:t}),new L.APIError("UNAUTHORIZED",{message:w.INVALID_EMAIL_OR_PASSWORD});if(!await e.context.password.verify({hash:a,password:r}))throw e.context.logger.error("Invalid password"),new L.APIError("UNAUTHORIZED",{message:w.INVALID_EMAIL_OR_PASSWORD});if(e.context.options?.emailAndPassword?.requireEmailVerification&&!o.user.emailVerified){if(!e.context.options?.emailVerification?.sendVerificationEmail)throw new L.APIError("UNAUTHORIZED",{message:w.EMAIL_NOT_VERIFIED});let d=await Q(e.context.secret,o.user.email),c=`${e.context.baseURL}/verify-email?token=${d}&callbackURL=${e.body.callbackURL||"/"}`;throw await e.context.options.emailVerification.sendVerificationEmail({user:o.user,url:c,token:d},e.request),new L.APIError("FORBIDDEN",{message:w.EMAIL_NOT_VERIFIED})}let s=await e.context.internalAdapter.createSession(o.user.id,e.headers,e.body.rememberMe===!1);if(!s)throw e.context.logger.error("Failed to create session"),new L.APIError("UNAUTHORIZED",{message:w.FAILED_TO_CREATE_SESSION});return await C(e,{session:s,user:o.user},e.body.rememberMe===!1),e.json({user:{id:o.user.id,email:o.user.email,name:o.user.name,image:o.user.image,emailVerified:o.user.emailVerified,createdAt:o.user.createdAt,updatedAt:o.user.updatedAt},token:s.token,redirect:!!e.body.callbackURL,url:e.body.callbackURL})});var fe=require("zod");var Ce=fe.z.object({code:fe.z.string().optional(),error:fe.z.string().optional(),error_description:fe.z.string().optional(),state:fe.z.string().optional()}),br=v("/callback/:id",{method:["GET","POST"],body:Ce.optional(),query:Ce.optional(),metadata:ae},async e=>{let t;try{if(e.method==="GET")t=Ce.parse(e.query);else if(e.method==="POST")t=Ce.parse(e.body);else throw new Error("Unsupported method")}catch(h){throw e.context.logger.error("INVALID_CALLBACK_REQUEST",h),e.redirect(`${e.context.baseURL}/error?error=invalid_callback_request`)}let{code:r,error:n,state:o,error_description:i}=t;if(!o)throw e.context.logger.error("State not found",n),e.redirect(`${e.context.baseURL}/error?error=state_not_found`);if(!r)throw e.context.logger.error("Code not found"),e.redirect(`${e.context.baseURL}/error?error=${n||"no_code"}&error_description=${i}`);let a=e.context.socialProviders.find(h=>h.id===e.params.id);if(!a)throw e.context.logger.error("Oauth provider with id",e.params.id,"not found"),e.redirect(`${e.context.baseURL}/error?error=oauth_provider_not_found`);let{codeVerifier:u,callbackURL:s,link:d,errorURL:c,newUserURL:p}=await Je(e),m;try{m=await a.validateAuthorizationCode({code:r,codeVerifier:u,redirectURI:`${e.context.baseURL}/callback/${a.id}`})}catch(h){throw e.context.logger.error("",h),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`)}let l=await a.getUserInfo(m).then(h=>h?.user);function f(h){let y=c||s||`${e.context.baseURL}/error`;throw y.includes("?")?y=`${y}&error=${h}`:y=`${y}?error=${h}`,e.redirect(y)}if(!l)return e.context.logger.error("Unable to get user info"),f("unable_to_get_user_info");if(!l.email&&a.id!=="roblox")return e.context.logger.error("Provider did not return email. This could be due to misconfiguration in the provider settings."),f("email_not_found");if(!s)throw e.context.logger.error("No callback URL found"),e.redirect(`${e.context.baseURL}/error?error=please_restart_the_process`);if(d){if(d.email!==l?.email?.toLowerCase()&&a.id!=="roblox")return f("email_doesn't_match");if(!await e.context.internalAdapter.createAccount({userId:d.userId,providerId:a.id,accountId:l.id}))return f("unable_to_link_account");let y;try{y=s.toString()}catch{y=s}throw e.redirect(y)}let g=await De(e,{userInfo:{...l,email:l.email||"",name:l.name||l.email||""},account:{providerId:a.id,accountId:l.id,...m,scope:m.scopes?.join(",")},callbackURL:s});if(g.error)return e.context.logger.error(g.error.split(" ").join("_")),f(g.error.split(" ").join("_"));let{session:b,user:A}=g.data;await C(e,{session:b,user:A});let R;try{R=(g.isRegister&&p||s).toString()}catch{R=g.isRegister&&p||s}throw e.redirect(R)});var Aa=require("zod");var Ar=require("better-call");var Rr=v("/sign-out",{method:"POST",requireHeaders:!0,metadata:{openapi:{description:"Sign out the current user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{success:{type:"boolean"}}}}}}}}}},async e=>{let t=await e.getSignedCookie(e.context.authCookies.sessionToken.name,e.context.secret);if(!t)throw z(e),new Ar.APIError("BAD_REQUEST",{message:w.FAILED_TO_GET_SESSION});return await e.context.internalAdapter.deleteSession(t),z(e),e.json({success:!0})});var q=require("zod");var me=require("better-call");function kr(e,t,r){let n=t?new URL(t,e.baseURL):new URL(`${e.baseURL}/error`);return r&&Object.entries(r).forEach(([o,i])=>n.searchParams.set(o,i)),n.href}function Vn(e,t,r){let n=new URL(t,e.baseURL);return r&&Object.entries(r).forEach(([o,i])=>n.searchParams.set(o,i)),n.href}var Tr=v("/forget-password",{method:"POST",body:q.z.object({email:q.z.string({description:"The email address of the user to send a password reset email to"}).email(),redirectTo:q.z.string({description:"The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN"}).optional()}),metadata:{openapi:{description:"Send a password reset email to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.emailAndPassword?.sendResetPassword)throw e.context.logger.error("Reset password isn't enabled.Please pass an emailAndPassword.sendResetPasswordToken function in your auth config!"),new me.APIError("BAD_REQUEST",{message:"Reset password isn't enabled"});let{email:t,redirectTo:r}=e.body,n=await e.context.internalAdapter.findUserByEmail(t,{includeAccounts:!0});if(!n)return e.context.logger.error("Reset Password: User not found",{email:t}),e.json({status:!1},{body:{status:!0}});let o=60*60*1,i=M(e.context.options.emailAndPassword.resetPasswordTokenExpiresIn||o,"sec"),a=H(24);await e.context.internalAdapter.createVerificationValue({value:n.user.id.toString(),identifier:`reset-password:${a}`,expiresAt:i});let u=`${e.context.baseURL}/reset-password/${a}?callbackURL=${r}`;return await e.context.options.emailAndPassword.sendResetPassword({user:n.user,url:u,token:a},e.request),e.json({status:!0})}),vr=v("/reset-password/:token",{method:"GET",query:q.z.object({callbackURL:q.z.string({description:"The URL to redirect the user to reset their password"})}),metadata:{openapi:{description:"Redirects the user to the callback URL with the token",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{token:{type:"string"}}}}}}}}}},async e=>{let{token:t}=e.params,{callbackURL:r}=e.query;if(!t||!r)throw e.redirect(kr(e.context,r,{error:"INVALID_TOKEN"}));let n=await e.context.internalAdapter.findVerificationValue(`reset-password:${t}`);throw!n||n.expiresAt<new Date?e.redirect(kr(e.context,r,{error:"INVALID_TOKEN"})):e.redirect(Vn(e.context,r,{token:t}))}),Er=v("/reset-password",{query:q.z.optional(q.z.object({token:q.z.string().optional(),currentURL:q.z.string().optional()})),method:"POST",body:q.z.object({newPassword:q.z.string({description:"The new password to set"}),token:q.z.string({description:"The token to reset the password"}).optional()}),metadata:{openapi:{description:"Reset the password for a user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{status:{type:"boolean"}}}}}}}}}},async e=>{let t=e.body.token||e.query?.token||(e.query?.currentURL?new URL(e.query.currentURL).searchParams.get("token"):"");if(!t)throw new me.APIError("BAD_REQUEST",{message:w.INVALID_TOKEN});let{newPassword:r}=e.body,n=e.context.password?.config.minPasswordLength,o=e.context.password?.config.maxPasswordLength;if(r.length<n)throw new me.APIError("BAD_REQUEST",{message:w.PASSWORD_TOO_SHORT});if(r.length>o)throw new me.APIError("BAD_REQUEST",{message:w.PASSWORD_TOO_LONG});let i=`reset-password:${t}`,a=await e.context.internalAdapter.findVerificationValue(i);if(!a||a.expiresAt<new Date)throw new me.APIError("BAD_REQUEST",{message:w.INVALID_TOKEN});await e.context.internalAdapter.deleteVerificationValue(a.id);let u=a.value,s=await e.context.password.hash(r);return(await e.context.internalAdapter.findAccounts(u)).find(p=>p.providerId==="credential")?(await e.context.internalAdapter.updatePassword(u,s),e.json({status:!0})):(await e.context.internalAdapter.createAccount({userId:u,providerId:"credential",password:s,accountId:u}),e.json({status:!0}))});var O=require("zod");var S=require("better-call");var T=require("zod"),Ur=require("better-call"),Ia=T.z.object({id:T.z.string(),providerId:T.z.string(),accountId:T.z.string(),userId:T.z.string(),accessToken:T.z.string().nullish(),refreshToken:T.z.string().nullish(),idToken:T.z.string().nullish(),accessTokenExpiresAt:T.z.date().nullish(),refreshTokenExpiresAt:T.z.date().nullish(),scope:T.z.string().nullish(),password:T.z.string().nullish(),createdAt:T.z.date().default(()=>new Date),updatedAt:T.z.date().default(()=>new Date)}),Pa=T.z.object({id:T.z.string(),email:T.z.string().transform(e=>e.toLowerCase()),emailVerified:T.z.boolean().default(!1),name:T.z.string(),image:T.z.string().nullish(),createdAt:T.z.date().default(()=>new Date),updatedAt:T.z.date().default(()=>new Date)}),La=T.z.object({id:T.z.string(),userId:T.z.string(),expiresAt:T.z.date(),createdAt:T.z.date().default(()=>new Date),updatedAt:T.z.date().default(()=>new Date),token:T.z.string(),ipAddress:T.z.string().nullish(),userAgent:T.z.string().nullish()}),Da=T.z.object({id:T.z.string(),value:T.z.string(),createdAt:T.z.date().default(()=>new Date),updatedAt:T.z.date().default(()=>new Date),expiresAt:T.z.date(),identifier:T.z.string()});function xr(e,t){let r=t.fields,n={};for(let o in e){let i=r[o];if(!i){n[o]=e[o];continue}i.returned!==!1&&(n[o]=e[o])}return n}function rt(e,t){let r={...t==="user"?e.user?.additionalFields:{},...t==="session"?e.session?.additionalFields:{}};for(let n of e.plugins||[])n.schema&&n.schema[t]&&(r={...r,...n.schema[t].fields});return r}function nt(e,t){let r=rt(e,"user");return xr(t,{fields:r})}function Ne(e,t){let r=rt(e,"session");return xr(t,{fields:r})}function Mn(e,t){let r=t.action||"create",n=t.fields,o={};for(let i in n){if(i in e){if(n[i].input===!1){if(n[i].defaultValue){o[i]=n[i].defaultValue;continue}continue}if(n[i].validator?.input&&e[i]!==void 0){o[i]=n[i].validator.input.parse(e[i]);continue}if(n[i].transform?.input&&e[i]!==void 0){o[i]=n[i].transform?.input(e[i]);continue}o[i]=e[i];continue}if(n[i].defaultValue&&r==="create"){o[i]=n[i].defaultValue;continue}if(n[i].required&&r==="create")throw new Ur.APIError("BAD_REQUEST",{message:`${i} is required`})}return o}function Be(e,t,r){let n=rt(e,"user");return Mn(t||{},{fields:n,action:r})}var Or=()=>v("/update-user",{method:"POST",body:O.z.record(O.z.string(),O.z.any()),use:[F],metadata:{openapi:{description:"Update the current user",requestBody:{content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"The name of the user"},image:{type:"string",description:"The image of the user"}}}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"}}}}}}}}}},async e=>{let t=e.body;if(t.email)throw new S.APIError("BAD_REQUEST",{message:w.EMAIL_CAN_NOT_BE_UPDATED});let{name:r,image:n,...o}=t,i=e.context.session;if(n===void 0&&r===void 0&&Object.keys(o).length===0)return e.json({status:!0});let a=Be(e.context.options,o,"update"),u=await e.context.internalAdapter.updateUserByEmail(i.user.email,{name:r,image:n,...a});return await C(e,{session:i.session,user:u}),e.json({status:!0})}),Sr=v("/change-password",{method:"POST",body:O.z.object({newPassword:O.z.string({description:"The new password to set"}),currentPassword:O.z.string({description:"The current password"}),revokeOtherSessions:O.z.boolean({description:"Revoke all other sessions"}).optional()}),use:[F],metadata:{openapi:{description:"Change the password of the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{description:"The user object",$ref:"#/components/schemas/User"}}}}}}}}}},async e=>{let{newPassword:t,currentPassword:r,revokeOtherSessions:n}=e.body,o=e.context.session,i=e.context.password.config.minPasswordLength;if(t.length<i)throw e.context.logger.error("Password is too short"),new S.APIError("BAD_REQUEST",{message:w.PASSWORD_TOO_SHORT});let a=e.context.password.config.maxPasswordLength;if(t.length>a)throw e.context.logger.error("Password is too long"),new S.APIError("BAD_REQUEST",{message:w.PASSWORD_TOO_LONG});let s=(await e.context.internalAdapter.findAccounts(o.user.id)).find(m=>m.providerId==="credential"&&m.password);if(!s||!s.password)throw new S.APIError("BAD_REQUEST",{message:w.CREDENTIAL_ACCOUNT_NOT_FOUND});let d=await e.context.password.hash(t);if(!await e.context.password.verify({hash:s.password,password:r}))throw new S.APIError("BAD_REQUEST",{message:w.INVALID_PASSWORD});await e.context.internalAdapter.updateAccount(s.id,{password:d});let p=null;if(n){await e.context.internalAdapter.deleteSessions(o.user.id);let m=await e.context.internalAdapter.createSession(o.user.id,e.headers);if(!m)throw new S.APIError("INTERNAL_SERVER_ERROR",{message:w.FAILED_TO_GET_SESSION});await C(e,{session:m,user:o.user}),p=m.token}return e.json({token:p})}),_r=v("/set-password",{method:"POST",body:O.z.object({newPassword:O.z.string()}),metadata:{SERVER_ONLY:!0},use:[F]},async e=>{let{newPassword:t}=e.body,r=e.context.session,n=e.context.password.config.minPasswordLength;if(t.length<n)throw e.context.logger.error("Password is too short"),new S.APIError("BAD_REQUEST",{message:w.PASSWORD_TOO_SHORT});let o=e.context.password.config.maxPasswordLength;if(t.length>o)throw e.context.logger.error("Password is too long"),new S.APIError("BAD_REQUEST",{message:w.PASSWORD_TOO_LONG});let a=(await e.context.internalAdapter.findAccounts(r.user.id)).find(s=>s.providerId==="credential"&&s.password),u=await e.context.password.hash(t);if(!a)return await e.context.internalAdapter.linkAccount({userId:r.user.id,providerId:"credential",accountId:r.user.id,password:u}),e.json({status:!0});throw new S.APIError("BAD_REQUEST",{message:"user already has a password"})}),Ir=v("/delete-user",{method:"POST",use:[F],body:O.z.object({callbackURL:O.z.string().optional(),password:O.z.string().optional(),token:O.z.string().optional()}),metadata:{openapi:{description:"Delete the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object"}}}}}}}},async e=>{if(!e.context.options.user?.deleteUser?.enabled)throw e.context.logger.error("Delete user is disabled. Enable it in the options",{session:e.context.session}),new S.APIError("NOT_FOUND");let t=e.context.session;if(e.body.password){let i=(await e.context.internalAdapter.findAccounts(t.user.id)).find(u=>u.providerId==="credential"&&u.password);if(!i||!i.password)throw new S.APIError("BAD_REQUEST",{message:w.CREDENTIAL_ACCOUNT_NOT_FOUND});if(!await e.context.password.verify({hash:i.password,password:e.body.password}))throw new S.APIError("BAD_REQUEST",{message:w.INVALID_PASSWORD})}else if(e.context.options.session?.freshAge){let o=t.session.createdAt.getTime(),i=e.context.options.session.freshAge;if(Date.now()-o>i)throw new S.APIError("BAD_REQUEST",{message:w.SESSION_EXPIRED})}if(e.body.token)return await ot({...e,query:{token:e.body.token}}),e.json({success:!0,message:"User deleted"});if(e.context.options.user.deleteUser?.sendDeleteAccountVerification){let o=Re(32,"0-9","a-z");await e.context.internalAdapter.createVerificationValue({value:t.user.id,identifier:`delete-account-${o}`,expiresAt:new Date(Date.now()+1e3*60*60*24)});let i=`${e.context.baseURL}/delete-user/callback?token=${o}&callbackURL=${e.body.callbackURL||"/"}`;return await e.context.options.user.deleteUser.sendDeleteAccountVerification({user:t.user,url:i,token:o},e.request),e.json({success:!0,message:"Verification email sent"})}let r=e.context.options.user.deleteUser?.beforeDelete;r&&await r(t.user,e.request),await e.context.internalAdapter.deleteUser(t.user.id),await e.context.internalAdapter.deleteSessions(t.user.id),await e.context.internalAdapter.deleteAccounts(t.user.id),z(e);let n=e.context.options.user.deleteUser?.afterDelete;return n&&await n(t.user,e.request),e.json({success:!0,message:"User deleted"})}),ot=v("/delete-user/callback",{method:"GET",query:O.z.object({token:O.z.string(),callbackURL:O.z.string().optional()})},async e=>{if(!e.context.options.user?.deleteUser?.enabled)throw e.context.logger.error("Delete user is disabled. Enable it in the options"),new S.APIError("NOT_FOUND");let t=await de(e);if(!t)throw new S.APIError("NOT_FOUND",{message:w.FAILED_TO_GET_USER_INFO});let r=await e.context.internalAdapter.findVerificationValue(`delete-account-${e.query.token}`);if(!r||r.expiresAt<new Date)throw r&&await e.context.internalAdapter.deleteVerificationValue(r.id),new S.APIError("NOT_FOUND",{message:w.INVALID_TOKEN});if(r.value!==t.user.id)throw new S.APIError("NOT_FOUND",{message:w.INVALID_TOKEN});let n=e.context.options.user.deleteUser?.beforeDelete;n&&await n(t.user,e.request),await e.context.internalAdapter.deleteUser(t.user.id),await e.context.internalAdapter.deleteSessions(t.user.id),await e.context.internalAdapter.deleteAccounts(t.user.id),await e.context.internalAdapter.deleteVerificationValue(r.id),z(e);let o=e.context.options.user.deleteUser?.afterDelete;if(o&&await o(t.user,e.request),e.query.callbackURL)throw e.redirect(e.query.callbackURL||"/");return e.json({success:!0,message:"User deleted"})}),Pr=v("/change-email",{method:"POST",query:O.z.object({currentURL:O.z.string().optional()}).optional(),body:O.z.object({newEmail:O.z.string({description:"The new email to set"}).email(),callbackURL:O.z.string({description:"The URL to redirect to after email verification"}).optional()}),use:[F],metadata:{openapi:{responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{user:{type:"object"},status:{type:"boolean"}}}}}}}}}},async e=>{if(!e.context.options.user?.changeEmail?.enabled)throw e.context.logger.error("Change email is disabled."),new S.APIError("BAD_REQUEST",{message:"Change email is disabled"});if(e.body.newEmail===e.context.session.user.email)throw e.context.logger.error("Email is the same"),new S.APIError("BAD_REQUEST",{message:"Email is the same"});if(await e.context.internalAdapter.findUserByEmail(e.body.newEmail))throw e.context.logger.error("Email already exists"),new S.APIError("BAD_REQUEST",{message:"Couldn't update your email"});if(e.context.session.user.emailVerified!==!0){let o=await e.context.internalAdapter.updateUserByEmail(e.context.session.user.email,{email:e.body.newEmail});return e.json({status:!0})}if(!e.context.options.user.changeEmail.sendChangeEmailVerification)throw e.context.logger.error("Verification email isn't enabled."),new S.APIError("BAD_REQUEST",{message:"Verification email isn't enabled"});let r=await Q(e.context.secret,e.context.session.user.email,e.body.newEmail),n=`${e.context.baseURL}/verify-email?token=${r}&callbackURL=${e.body.callbackURL||e.query?.currentURL||"/"}`;return await e.context.options.user.changeEmail.sendChangeEmailVerification({user:e.context.session.user,newEmail:e.body.newEmail,url:n,token:r},e.request),e.json({status:!0})});var zn=(e="Unknown")=>`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Authentication Error</title>
    <style>
        :root {
            --bg-color: #f8f9fa;
            --text-color: #212529;
            --accent-color: #000000;
            --error-color: #dc3545;
            --border-color: #e9ecef;
        }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            line-height: 1.5;
        }
        .error-container {
            background-color: #ffffff;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            padding: 2.5rem;
            text-align: center;
            max-width: 90%;
            width: 400px;
        }
        h1 {
            color: var(--error-color);
            font-size: 1.75rem;
            margin-bottom: 1rem;
            font-weight: 600;
        }
        p {
            margin-bottom: 1.5rem;
            color: #495057;
        }
        .btn {
            background-color: var(--accent-color);
            color: #ffffff;
            text-decoration: none;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            transition: all 0.3s ease;
            display: inline-block;
            font-weight: 500;
            border: 2px solid var(--accent-color);
        }
        .btn:hover {
            background-color: #131721;
        }
        .error-code {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border-color);
        }
        .icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="error-container">
        <div class="icon">\u26A0\uFE0F</div>
        <h1>Better Auth Error</h1>
        <p>We encountered an issue while processing your request. Please try again or contact the application owner if the problem persists.</p>
        <a href="/" id="returnLink" class="btn">Return to Application</a>
        <div class="error-code">Error Code: <span id="errorCode">${e}</span></div>
    </div>
</body>
</html>`,Lr=v("/error",{method:"GET",metadata:{...ae,openapi:{description:"Displays an error page",responses:{200:{description:"Success",content:{"text/html":{schema:{type:"string"}}}}}}}},async e=>{let t=new URL(e.request?.url||"").searchParams.get("error")||"Unknown";return new Response(zn(t),{headers:{"Content-Type":"text/html"}})});var Dr=v("/ok",{method:"GET",metadata:{...ae,openapi:{description:"Check if the API is working",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{ok:{type:"boolean"}}}}}}}}}},async e=>e.json({ok:!0}));var ce=require("zod");var J=require("better-call");var Cr=()=>v("/sign-up/email",{method:"POST",query:ce.z.object({currentURL:ce.z.string().optional()}).optional(),body:ce.z.record(ce.z.string(),ce.z.any()),metadata:{openapi:{description:"Sign up a user using email and password",requestBody:{content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"The name of the user"},email:{type:"string",description:"The email of the user"},password:{type:"string",description:"The password of the user"},callbackURL:{type:"string",description:"The URL to use for email verification callback"}},required:["name","email","password"]}}}},responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{id:{type:"string",description:"The id of the user"},email:{type:"string",description:"The email of the user"},name:{type:"string",description:"The name of the user"},image:{type:"string",description:"The image of the user"},emailVerified:{type:"boolean",description:"If the email is verified"}}}}}}}}}},async e=>{if(!e.context.options.emailAndPassword?.enabled)throw new J.APIError("BAD_REQUEST",{message:"Email and password sign up is not enabled"});let t=e.body,{name:r,email:n,password:o,image:i,callbackURL:a,...u}=t;if(!ce.z.string().email().safeParse(n).success)throw new J.APIError("BAD_REQUEST",{message:w.INVALID_EMAIL});let d=e.context.password.config.minPasswordLength;if(o.length<d)throw e.context.logger.error("Password is too short"),new J.APIError("BAD_REQUEST",{message:w.PASSWORD_TOO_SHORT});let c=e.context.password.config.maxPasswordLength;if(o.length>c)throw e.context.logger.error("Password is too long"),new J.APIError("BAD_REQUEST",{message:w.PASSWORD_TOO_LONG});if((await e.context.internalAdapter.findUserByEmail(n))?.user)throw e.context.logger.info(`Sign-up attempt for existing email: ${n}`),new J.APIError("UNPROCESSABLE_ENTITY",{message:w.USER_ALREADY_EXISTS});let m=Be(e.context.options,u),l;try{if(l=await e.context.internalAdapter.createUser({email:n.toLowerCase(),name:r,image:i,...m,emailVerified:!1}),!l)throw new J.APIError("BAD_REQUEST",{message:w.FAILED_TO_CREATE_USER})}catch(b){throw Se&&e.context.logger.error("Failed to create user",b),new J.APIError("UNPROCESSABLE_ENTITY",{message:w.FAILED_TO_CREATE_USER,details:b})}if(!l)throw new J.APIError("UNPROCESSABLE_ENTITY",{message:w.FAILED_TO_CREATE_USER});let f=await e.context.password.hash(o);if(await e.context.internalAdapter.linkAccount({userId:l.id,providerId:"credential",accountId:l.id,password:f}),e.context.options.emailVerification?.sendOnSignUp||e.context.options.emailAndPassword.requireEmailVerification){let b=await Q(e.context.secret,l.email),A=`${e.context.baseURL}/verify-email?token=${b}&callbackURL=${t.callbackURL||e.query?.currentURL||"/"}`;await e.context.options.emailVerification?.sendVerificationEmail?.({user:l,url:A,token:b},e.request)}if(!e.context.options.emailAndPassword.autoSignIn||e.context.options.emailAndPassword.requireEmailVerification)return e.json({token:null});let g=await e.context.internalAdapter.createSession(l.id,e.request);if(!g)throw new J.APIError("BAD_REQUEST",{message:w.FAILED_TO_CREATE_SESSION});return await C(e,{session:g,user:l}),e.json({token:g.token})});var ge=require("zod");var it=require("better-call");var Nr=v("/list-accounts",{method:"GET",use:[F],metadata:{openapi:{description:"List all accounts linked to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"array",items:{type:"object",properties:{id:{type:"string"},provider:{type:"string"}}}}}}}}}}},async e=>{let t=e.context.session,r=await e.context.internalAdapter.findAccounts(t.user.id);return e.json(r.map(n=>({id:n.id,provider:n.providerId})))}),Br=v("/link-social",{method:"POST",requireHeaders:!0,query:ge.z.object({currentURL:ge.z.string().optional()}).optional(),body:ge.z.object({callbackURL:ge.z.string({description:"The URL to redirect to after the user has signed in"}).optional(),provider:ge.z.enum(Xe,{description:"The OAuth2 provider to use"})}),use:[F],metadata:{openapi:{description:"Link a social account to the user",responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",properties:{url:{type:"string"},redirect:{type:"boolean"}},required:["url","redirect"]}}}}}}}},async e=>{let t=e.context.session;if((await e.context.internalAdapter.findAccounts(t.user.id)).find(u=>u.providerId===e.body.provider))throw new it.APIError("BAD_REQUEST",{message:w.SOCIAL_ACCOUNT_ALREADY_LINKED});let o=e.context.socialProviders.find(u=>u.id===e.body.provider);if(!o)throw e.context.logger.error("Provider not found. Make sure to add the provider in your auth config",{provider:e.body.provider}),new it.APIError("NOT_FOUND",{message:w.PROVIDER_NOT_FOUND});let i=await ke(e,{userId:t.user.id,email:t.user.email}),a=await o.createAuthorizationURL({state:i.state,codeVerifier:i.codeVerifier,redirectURI:`${e.context.baseURL}/callback/${o.id}`});return e.json({url:a.toString(),redirect:!0})});function je(e,t){if(t.advanced?.ipAddress?.disableIpTracking)return null;let r="127.0.0.1";if(mt)return r;let o=t.advanced?.ipAddress?.ipAddressHeaders||["x-client-ip","x-forwarded-for","cf-connecting-ip","fastly-client-ip","x-real-ip","x-cluster-client-ip","x-forwarded","forwarded-for","forwarded"],i=e instanceof Request?e.headers:e;for(let a of o){let u=i.get(a);if(typeof u=="string"){let s=u.split(",")[0].trim();if(s)return s}}return null}function Hn(e,t,r){let n=Date.now(),o=t*1e3;return n-r.lastRequest<o&&r.count>=e}function Wn(e){return new Response(JSON.stringify({message:"Too many requests. Please try again later."}),{status:429,statusText:"Too Many Requests",headers:{"X-Retry-After":e.toString()}})}function Gn(e,t){let r=Date.now(),n=t*1e3;return Math.ceil((e+n-r)/1e3)}function Kn(e,t){let r="rateLimit",n=e.adapter;return{get:async o=>(await n.findMany({model:r,where:[{field:"key",value:o}]}))[0],set:async(o,i,a)=>{try{a?await n.updateMany({model:t??"rateLimit",where:[{field:"key",value:o}],update:{count:i.count,lastRequest:i.lastRequest}}):await n.create({model:t??"rateLimit",data:{key:o,count:i.count,lastRequest:i.lastRequest}})}catch(u){e.logger.error("Error setting rate limit",u)}}}}var jr=new Map;function Qn(e){return e.options.rateLimit?.customStorage?e.options.rateLimit.customStorage:e.rateLimit.storage==="secondary-storage"?{get:async r=>{let n=await e.options.secondaryStorage?.get(r);return n?JSON.parse(n):void 0},set:async(r,n)=>{await e.options.secondaryStorage?.set?.(r,JSON.stringify(n))}}:e.rateLimit.storage==="memory"?{async get(r){return jr.get(r)},async set(r,n,o){jr.set(r,n)}}:Kn(e,e.rateLimit.modelName)}async function Fr(e,t){if(!t.rateLimit.enabled)return;let r=t.baseURL,n=e.url.replace(r,"").split("?")[0],o=t.rateLimit.window,i=t.rateLimit.max,a=je(e,t.options)+n,s=Jn().find(m=>m.pathMatcher(n));s&&(o=s.window,i=s.max);for(let m of t.options.plugins||[])if(m.rateLimit){let l=m.rateLimit.find(f=>f.pathMatcher(n));if(l){o=l.window,i=l.max;break}}if(t.rateLimit.customRules){let m=Object.keys(t.rateLimit.customRules).find(l=>l.includes("*")?Ue(l)(n):l===n);if(m){let l=t.rateLimit.customRules[m],f=typeof l=="function"?await l(e):l;f&&(o=f.window,i=f.max)}}let d=Qn(t),c=await d.get(a),p=Date.now();if(!c)await d.set(a,{key:a,count:1,lastRequest:p});else{let m=p-c.lastRequest;if(Hn(i,o,c)){let l=Gn(c.lastRequest,o);return Wn(l)}else m>o*1e3?await d.set(a,{...c,count:1,lastRequest:p},!0):await d.set(a,{...c,count:c.count+1,lastRequest:p},!0)}}function Jn(){return[{pathMatcher(t){return t.startsWith("/sign-in")||t.startsWith("/sign-up")||t.startsWith("/change-password")||t.startsWith("/change-email")},window:10,max:3}]}var $d=require("defu");var tt=require("better-call");function st(e,t){let r=t.plugins?.reduce((u,s)=>({...u,...s.endpoints}),{}),n=t.plugins?.map(u=>u.middlewares?.map(s=>{let d=async c=>s.middleware({...c,context:{...e,...c.context}});return d.path=s.path,d.options=s.middleware.options,d.headers=s.middleware.headers,{path:s.path,middleware:d}})).filter(u=>u!==void 0).flat()||[],i={...{signInSocial:yr,callbackOAuth:br,getSession:et(),signOut:Rr,signUpEmail:Cr(),signInEmail:wr,forgetPassword:Tr,resetPassword:Er,verifyEmail:hr,sendVerificationEmail:gr,changeEmail:Pr,changePassword:Sr,setPassword:_r,updateUser:Or(),deleteUser:Ir,forgetPasswordCallback:vr,listSessions:ur(),revokeSession:lr,revokeSessions:pr,revokeOtherSessions:fr,linkSocialAccount:Br,listUserAccounts:Nr,deleteUserCallback:ot},...r,ok:Dr,error:Lr},a={};for(let[u,s]of Object.entries(i))a[u]=async(d={})=>{s.headers=new Headers;let c={setHeader(h,y){s.headers.set(h,y)},setCookie(h,y,_){(0,P.setCookie)(s.headers,h,y,_)},getCookie(h,y){let k=d.headers?.get("cookie");return(0,P.getCookie)(k||"",h,y)},getSignedCookie(h,y,_){let k=d.headers;return k?(0,P.getSignedCookie)(k,y,h,_):null},async setSignedCookie(h,y,_,k){await(0,P.setSignedCookie)(s.headers,h,y,_,k)},redirect(h){return s.headers.set("Location",h),new P.APIError("FOUND")},responseHeader:s.headers},p=await e,m=null,l={...c,...d,path:s.path,context:{...p,...d.context,session:null,setNewSession:function(h){this.newSession=h,m=h}}},f=t.plugins||[],g=f.map(h=>{if(h.hooks?.before)return h.hooks.before}).filter(h=>h!==void 0).flat(),b=f.map(h=>{if(h.hooks?.after)return h.hooks.after}).filter(h=>h!==void 0).flat();t.hooks?.before&&g.push({matcher:()=>!0,handler:t.hooks.before}),t.hooks?.after&&b.push({matcher:()=>!0,handler:t.hooks.after});for(let h of g){if(!h.matcher(l))continue;let y=await h.handler(l);if(y&&"context"in y){l={...l,...y.context};continue}if(y)return y}let A;try{A=await s(l),m&&(l.context.newSession=m)}catch(h){if(m&&(l.context.newSession=m),h instanceof P.APIError){if(!b?.length)throw h.headers=s.headers,h;l.context.returned=h,l.context.returned.headers=s.headers;for(let y of b||[])if(y.matcher(l))try{let k=await y.handler(l);k&&"response"in k&&(l.context.returned=k.response)}catch(k){if(k instanceof P.APIError){l.context.returned=k;continue}throw k}if(l.context.returned instanceof P.APIError)throw l.context.returned.headers=s.headers,l.context.returned;return l.context.returned}throw h}l.context.returned=A,l.responseHeader=s.headers;for(let h of b)if(h.matcher(l))try{let _=await h.handler(l);if(_)if("responseHeader"in _){let k=_.responseHeader;l.responseHeader=k}else l.context.returned=_}catch(_){if(_ instanceof P.APIError){l.context.returned=_;continue}throw _}let R=l.context.returned;if(R instanceof Response&&s.headers.forEach((h,y)=>{y==="set-cookie"?R.headers.append(y,h):R.headers.set(y,h)}),R instanceof P.APIError)throw R.headers=s.headers,R;return R},a[u].path=s.path,a[u].method=s.method,a[u].options=s.options,a[u].headers=s.headers;return{api:a,middlewares:n}}var qr=(e,t)=>{let{api:r,middlewares:n}=st(e,t),o=new URL(e.baseURL).pathname;return(0,P.createRouter)(r,{extraContext:e,basePath:o,routerMiddleware:[{path:"/**",middleware:wt},...n],async onRequest(i){for(let a of e.options.plugins||[])if(a.onRequest){let u=await a.onRequest(i,e);if(u&&"response"in u)return u.response}return Fr(i,e)},async onResponse(i){for(let a of e.options.plugins||[])if(a.onResponse){let u=await a.onResponse(i,e);if(u)return u.response}return i},onError(i){if(i instanceof P.APIError&&i.status==="FOUND")return;if(t.onAPIError?.throw)throw i;if(t.onAPIError?.onError){t.onAPIError.onError(i,e);return}let a=t.logger?.level,u=a==="error"||a==="warn"||a==="debug"?N:void 0;if(t.logger?.disabled!==!0){if(i&&typeof i=="object"&&"message"in i&&typeof i.message=="string"&&(i.message.includes("no column")||i.message.includes("column")||i.message.includes("relation")||i.message.includes("table")||i.message.includes("does not exist"))){e.logger?.error(i.message);return}i instanceof P.APIError?(i.status==="INTERNAL_SERVER_ERROR"&&e.logger.error(i.status,i),u?.error(i.message)):e.logger?.error(i&&typeof i=="object"&&"name"in i?i.name:"",i)}}})};var Gr=require("defu");function $r(e,t){let r=t.hooks;async function n(a,u,s){let d=a;for(let m of r||[]){let l=m[u]?.create?.before;if(l){let f=await l(a);if(f===!1)return null;typeof f=="object"&&"data"in f&&(d=f.data)}}let c=s?await s.fn(d):null,p=!s||s.executeMainFn?await e.create({model:u,data:d}):c;for(let m of r||[]){let l=m[u]?.create?.after;l&&await l(p)}return p}async function o(a,u,s,d){let c=a;for(let l of r||[]){let f=l[s]?.update?.before;if(f){let g=await f(a);if(g===!1)return null;c=typeof g=="object"?g.data:g}}let p=d?await d.fn(c):null,m=!d||d.executeMainFn?await e.update({model:s,update:c,where:u}):p;for(let l of r||[]){let f=l[s]?.update?.after;f&&await f(m)}return m}async function i(a,u,s,d){let c=a;for(let l of r||[]){let f=l[s]?.update?.before;if(f){let g=await f(a);if(g===!1)return null;c=typeof g=="object"?g.data:g}}let p=d?await d.fn(c):null,m=!d||d.executeMainFn?await e.updateMany({model:s,update:c,where:u}):p;for(let l of r||[]){let f=l[s]?.update?.after;f&&await f(m)}return m}return{createWithHooks:n,updateWithHooks:o,updateManyWithHooks:i}}var at=(e,t)=>{let r=t.options,n=r.secondaryStorage,o=r.session?.expiresIn||60*60*24*7,{createWithHooks:i,updateWithHooks:a,updateManyWithHooks:u}=$r(e,t);return{createOAuthUser:async(s,d)=>{let c=await i({createdAt:new Date,updatedAt:new Date,...s},"user"),p=await i({...d,userId:c.id||s.id,createdAt:new Date,updatedAt:new Date},"account");return{user:c,account:p}},createUser:async s=>await i({createdAt:new Date,updatedAt:new Date,emailVerified:!1,...s,email:s.email.toLowerCase()},"user"),createAccount:async s=>await i({createdAt:new Date,updatedAt:new Date,...s},"account"),listSessions:async s=>{if(n){let c=await n.get(`active-sessions-${s}`);if(!c)return[];let p=le(c)||[],m=Date.now(),l=p.filter(g=>g.expiresAt>m),f=[];for(let g of l){let b=await n.get(g.token);if(b){let A=JSON.parse(b),R=Ne(t.options,{...A.session,expiresAt:new Date(A.session.expiresAt)});f.push(R)}}return f}return await e.findMany({model:"session",where:[{field:"userId",value:s}]})},listUsers:async(s,d,c,p)=>await e.findMany({model:"user",limit:s,offset:d,sortBy:c,where:p}),deleteUser:async s=>{await e.deleteMany({model:"session",where:[{field:"userId",value:s}]}),await e.deleteMany({model:"account",where:[{field:"userId",value:s}]}),await e.delete({model:"user",where:[{field:"id",value:s}]})},createSession:async(s,d,c,p)=>{let m=d instanceof Request?d.headers:d,{id:l,...f}=p||{},g={ipAddress:d&&je(d,t.options)||"",userAgent:m?.get("user-agent")||"",...f,expiresAt:c?M(60*60*24,"sec"):M(o,"sec"),userId:s,token:H(32),createdAt:new Date,updatedAt:new Date};return await i(g,"session",n?{fn:async A=>{let R=await n.get(`active-sessions-${s}`),h=[],y=Date.now();return R&&(h=le(R)||[],h=h.filter(_=>_.expiresAt>y)),h.push({token:g.token,expiresAt:y+o*1e3}),await n.set(`active-sessions-${s}`,JSON.stringify(h),o),A},executeMainFn:r.session?.storeSessionInDatabase}:void 0)},findSession:async s=>{if(n){let l=await n.get(s);if(l){let f=JSON.parse(l),g=Ne(t.options,{...f.session,expiresAt:new Date(f.session.expiresAt),createdAt:new Date(f.session.createdAt),updatedAt:new Date(f.session.updatedAt)}),b=nt(t.options,{...f.user,createdAt:new Date(f.user.createdAt),updatedAt:new Date(f.user.updatedAt)});return{session:g,user:b}}}let d=await e.findOne({model:"session",where:[{value:s,field:"token"}]});if(!d)return null;let c=await e.findOne({model:"user",where:[{value:d.userId,field:"id"}]});if(!c)return null;let p=Ne(t.options,d),m=nt(t.options,c);return n&&await n?.set(s,JSON.stringify({session:p,user:m}),p.expiresAt?Math.floor(((p.expiresAt instanceof Date?p.expiresAt.getTime():new Date(p.expiresAt).getTime())-Date.now())/1e3):o),{session:p,user:m}},findSessions:async s=>{if(n){let m=[];for(let l of s){let f=await n.get(l);if(f){let g=JSON.parse(f),b={session:{...g.session,expiresAt:new Date(g.session.expiresAt)},user:{...g.user,createdAt:new Date(g.user.createdAt),updatedAt:new Date(g.user.updatedAt)}};m.push(b)}}return m}let d=await e.findMany({model:"session",where:[{field:"token",value:s,operator:"in"}]}),c=d.map(m=>m.userId);if(!c.length)return[];let p=await e.findMany({model:"user",where:[{field:"id",value:c,operator:"in"}]});return d.map(m=>{let l=p.find(f=>f.id===m.userId);return l?{session:m,user:l}:null})},updateSession:async(s,d)=>await a(d,[{field:"token",value:s}],"session",n?{async fn(p){let m=await n.get(s),l=null;return m?(l={...JSON.parse(m).session,...p},l):null},executeMainFn:r.session?.storeSessionInDatabase}:void 0),deleteSession:async s=>{if(n){await n.delete(s),r.session?.storeSessionInDatabase&&await e.delete({model:"session",where:[{field:"token",value:s}]});return}await e.delete({model:"session",where:[{field:"token",value:s}]})},deleteAccounts:async s=>{await e.deleteMany({model:"account",where:[{field:"userId",value:s}]})},deleteSessions:async s=>{if(n){if(typeof s=="string"){let d=await n.get(`active-sessions-${s}`),c=d?le(d):[];if(!c)return;for(let p of c)await n.delete(p.token)}else for(let d of s)await n.get(d)&&await n.delete(d);r.session?.storeSessionInDatabase&&await e.deleteMany({model:"session",where:[{field:Array.isArray(s)?"token":"userId",value:s,operator:Array.isArray(s)?"in":void 0}]});return}await e.deleteMany({model:"session",where:[{field:Array.isArray(s)?"token":"userId",value:s,operator:Array.isArray(s)?"in":void 0}]})},findOAuthUser:async(s,d,c)=>{let p=null;if(p=await e.findOne({model:"user",where:[{value:s.toLowerCase(),field:"email"}]}),!p){let l=await e.findOne({model:"account",where:[{value:d,field:"accountId"},{value:c,field:"providerId"}]});return l?(p=await e.findOne({model:"user",where:[{value:l.userId,field:"id"}]}),{user:p,accounts:[l]}):null}let m=await e.findMany({model:"account",where:[{value:p.id,field:"userId"}]});return{user:p,accounts:m||[]}},findUserByEmail:async(s,d)=>{let c=await e.findOne({model:"user",where:[{value:s.toLowerCase(),field:"email"}]});if(!c)return null;if(d?.includeAccounts){let p=await e.findMany({model:"account",where:[{value:c.id,field:"userId"}]});return{user:c,accounts:p}}return{user:c,accounts:[]}},findUserById:async s=>await e.findOne({model:"user",where:[{field:"id",value:s}]}),linkAccount:async s=>await i({...s,createdAt:new Date,updatedAt:new Date},"account"),updateUser:async(s,d)=>await a(d,[{field:"id",value:s}],"user"),updateUserByEmail:async(s,d)=>await a(d,[{field:"email",value:s}],"user"),updatePassword:async(s,d)=>{await u({password:d},[{field:"userId",value:s},{field:"providerId",value:"credential"}],"account")},findAccounts:async s=>await e.findMany({model:"account",where:[{field:"userId",value:s}]}),findAccount:async s=>await e.findOne({model:"account",where:[{field:"accountId",value:s}]}),findAccountByUserId:async s=>await e.findMany({model:"account",where:[{field:"userId",value:s}]}),updateAccount:async(s,d)=>await a(d,[{field:"id",value:s}],"account"),createVerificationValue:async s=>await i({createdAt:new Date,updatedAt:new Date,...s},"verification"),findVerificationValue:async s=>(await e.findMany({model:"verification",where:[{field:"identifier",value:s}],sortBy:{field:"createdAt",direction:"desc"},limit:1}))[0],deleteVerificationValue:async s=>{await e.delete({model:"verification",where:[{field:"id",value:s}]})},deleteVerificationByIdentifier:async s=>{await e.delete({model:"verification",where:[{field:"identifier",value:s}]})},updateVerificationValue:async(s,d)=>await a(d,[{field:"id",value:s}],"verification")}};var X=e=>{let t=e.plugins?.reduce((s,d)=>{let c=d.schema;if(!c)return s;for(let[p,m]of Object.entries(c))s[p]={fields:{...s[p]?.fields,...m.fields},modelName:m.modelName||p};return s},{}),r=e.rateLimit?.storage==="database",n={rateLimit:{modelName:e.rateLimit?.modelName||"rateLimit",fields:{key:{type:"string",fieldName:e.rateLimit?.fields?.key||"key"},count:{type:"number",fieldName:e.rateLimit?.fields?.count||"count"},lastRequest:{type:"number",fieldName:e.rateLimit?.fields?.lastRequest||"lastRequest"}}}},{user:o,session:i,account:a,...u}=t||{};return{user:{modelName:e.user?.modelName||"user",fields:{name:{type:"string",required:!0,fieldName:e.user?.fields?.name||"name"},email:{type:"string",unique:!0,required:!0,fieldName:e.user?.fields?.email||"email"},emailVerified:{type:"boolean",defaultValue:()=>!1,required:!0,fieldName:e.user?.fields?.emailVerified||"emailVerified"},image:{type:"string",required:!1,fieldName:e.user?.fields?.image||"image"},createdAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",defaultValue:()=>new Date,required:!0,fieldName:e.user?.fields?.updatedAt||"updatedAt"},...o?.fields,...e.user?.additionalFields},order:1},session:{modelName:e.session?.modelName||"session",fields:{expiresAt:{type:"date",required:!0,fieldName:e.session?.fields?.expiresAt||"expiresAt"},token:{type:"string",required:!0,fieldName:e.session?.fields?.token||"token",unique:!0},createdAt:{type:"date",required:!0,fieldName:e.session?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.session?.fields?.updatedAt||"updatedAt"},ipAddress:{type:"string",required:!1,fieldName:e.session?.fields?.ipAddress||"ipAddress"},userAgent:{type:"string",required:!1,fieldName:e.session?.fields?.userAgent||"userAgent"},userId:{type:"string",fieldName:e.session?.fields?.userId||"userId",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0},...i?.fields,...e.session?.additionalFields},order:2},account:{modelName:e.account?.modelName||"account",fields:{accountId:{type:"string",required:!0,fieldName:e.account?.fields?.accountId||"accountId"},providerId:{type:"string",required:!0,fieldName:e.account?.fields?.providerId||"providerId"},userId:{type:"string",references:{model:e.user?.modelName||"user",field:"id",onDelete:"cascade"},required:!0,fieldName:e.account?.fields?.userId||"userId"},accessToken:{type:"string",required:!1,fieldName:e.account?.fields?.accessToken||"accessToken"},refreshToken:{type:"string",required:!1,fieldName:e.account?.fields?.refreshToken||"refreshToken"},idToken:{type:"string",required:!1,fieldName:e.account?.fields?.idToken||"idToken"},accessTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"accessTokenExpiresAt"},refreshTokenExpiresAt:{type:"date",required:!1,fieldName:e.account?.fields?.accessTokenExpiresAt||"refreshTokenExpiresAt"},scope:{type:"string",required:!1,fieldName:e.account?.fields?.scope||"scope"},password:{type:"string",required:!1,fieldName:e.account?.fields?.password||"password"},createdAt:{type:"date",required:!0,fieldName:e.account?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!0,fieldName:e.account?.fields?.updatedAt||"updatedAt"},...a?.fields},order:3},verification:{modelName:e.verification?.modelName||"verification",fields:{identifier:{type:"string",required:!0,fieldName:e.verification?.fields?.identifier||"identifier"},value:{type:"string",required:!0,fieldName:e.verification?.fields?.value||"value"},expiresAt:{type:"date",required:!0,fieldName:e.verification?.fields?.expiresAt||"expiresAt"},createdAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.createdAt||"createdAt"},updatedAt:{type:"date",required:!1,defaultValue:()=>new Date,fieldName:e.verification?.fields?.updatedAt||"updatedAt"}},order:4},...u,...r?n:{}}};var Zn=require("zod");var ve=require("kysely"),ee=require("kysely");function Vr(e){if(!e)return null;if("dialect"in e)return Vr(e.dialect);if("createDriver"in e){if(e instanceof ee.SqliteDialect)return"sqlite";if(e instanceof ee.MysqlDialect)return"mysql";if(e instanceof ee.PostgresDialect)return"postgres";if(e instanceof ve.MssqlDialect)return"mssql"}return"aggregate"in e?"sqlite":"getConnection"in e?"mysql":"connect"in e?"postgres":null}var dt=async e=>{let t=e.database;if(!t)return{kysely:null,databaseType:null};if("db"in t)return{kysely:t.db,databaseType:t.type};if("dialect"in t)return{kysely:new ve.Kysely({dialect:t.dialect}),databaseType:t.type};let r,n=Vr(t);return"createDriver"in t&&(r=t),"aggregate"in t&&(r=new ee.SqliteDialect({database:t})),"getConnection"in t&&(r=new ee.MysqlDialect(t)),"connect"in t&&(r=new ee.PostgresDialect({pool:t})),{kysely:r?new ve.Kysely({dialect:r}):null,databaseType:n}};function Fe(e,t,r){return r==="update"?e:e==null&&t.defaultValue?typeof t.defaultValue=="function"?t.defaultValue():t.defaultValue:e}var Yn=(e,t,r)=>{let n=X(t);function o(d,c){if(c==="id")return c;let p=n[d].fields[c];return p||console.log("Field not found",d,c),p.fieldName||c}function i(d,c,p){let{type:m="sqlite"}=r||{},l=n[c].fields[p];return l.type==="boolean"&&m==="sqlite"&&d!==null&&d!==void 0?d?1:0:l.type==="date"&&d&&d instanceof Date&&m==="sqlite"?d.toISOString():d}function a(d,c,p){let{type:m="sqlite"}=r||{},l=n[c].fields[p];return l.type==="boolean"&&m==="sqlite"&&d!==null?d===1:l.type==="date"&&d?new Date(d):d}function u(d){return n[d].modelName}let s=t?.advanced?.generateId===!1;return{transformInput(d,c,p){let m=s||p==="update"?{}:{id:t.advanced?.generateId?t.advanced.generateId({model:c}):d.id||H()},l=n[c].fields;for(let f in l){let g=d[f];m[l[f].fieldName||f]=Fe(i(g,c,f),l[f],p)}return m},transformOutput(d,c,p=[]){if(!d)return null;let m=d.id?p.length===0||p.includes("id")?{id:d.id}:{}:{},l=n[c].fields;for(let f in l){if(p.length&&!p.includes(f))continue;let g=l[f];g&&(m[f]=a(d[g.fieldName||f],c,f))}return m},convertWhereClause(d,c){if(!c)return{and:null,or:null};let p={and:[],or:[]};return c.forEach(m=>{let{field:l,value:f,operator:g="=",connector:b="AND"}=m,A=o(d,l),R=h=>g.toLowerCase()==="in"?h(A,"in",Array.isArray(f)?f:[f]):g==="contains"?h(A,"like",`%${f}%`):g==="starts_with"?h(A,"like",`${f}%`):g==="ends_with"?h(A,"like",`%${f}`):g==="eq"?h(A,"=",f):g==="ne"?h(A,"<>",f):g==="gt"?h(A,">",f):g==="gte"?h(A,">=",f):g==="lt"?h(A,"<",f):g==="lte"?h(A,"<=",f):h(A,g,f);b==="OR"?p.or.push(R):p.and.push(R)}),{and:p.and.length?p.and:null,or:p.or.length?p.or:null}},async withReturning(d,c,p,m){let l;if(r?.type!=="mysql")l=await c.returningAll().executeTakeFirst();else{await c.execute();let f=d.id?"id":m[0].field?m[0].field:"id",g=d[f]||m[0].value;l=await e.selectFrom(u(p)).selectAll().where(o(p,f),"=",g).executeTakeFirst()}return l},getModelName:u,getField:o}},Mr=(e,t)=>r=>{let{transformInput:n,withReturning:o,transformOutput:i,convertWhereClause:a,getModelName:u,getField:s}=Yn(e,r,t);return{id:"kysely",async create(d){let{model:c,data:p,select:m}=d,l=n(p,c,"create"),f=e.insertInto(u(c)).values(l);return i(await o(l,f,c,[]),c,m)},async findOne(d){let{model:c,where:p,select:m}=d,{and:l,or:f}=a(c,p),g=e.selectFrom(u(c)).selectAll();l&&(g=g.where(A=>A.and(l.map(R=>R(A))))),f&&(g=g.where(A=>A.or(f.map(R=>R(A)))));let b=await g.executeTakeFirst();return b?i(b,c,m):null},async findMany(d){let{model:c,where:p,limit:m,offset:l,sortBy:f}=d,{and:g,or:b}=a(c,p),A=e.selectFrom(u(c));g&&(A=A.where(h=>h.and(g.map(y=>y(h))))),b&&(A=A.where(h=>h.or(b.map(y=>y(h))))),A=A.limit(m||100),l&&(A=A.offset(l)),f&&(A=A.orderBy(s(c,f.field),f.direction));let R=await A.selectAll().execute();return R?R.map(h=>i(h,c)):[]},async update(d){let{model:c,where:p,update:m}=d,{and:l,or:f}=a(c,p),g=n(m,c,"update"),b=e.updateTable(u(c)).set(g);return l&&(b=b.where(R=>R.and(l.map(h=>h(R))))),f&&(b=b.where(R=>R.or(f.map(h=>h(R))))),await i(await o(g,b,c,p),c)},async updateMany(d){let{model:c,where:p,update:m}=d,{and:l,or:f}=a(c,p),g=n(m,c,"update"),b=e.updateTable(u(c)).set(g);return l&&(b=b.where(R=>R.and(l.map(h=>h(R))))),f&&(b=b.where(R=>R.or(f.map(h=>h(R))))),(await b.execute()).length},async delete(d){let{model:c,where:p}=d,{and:m,or:l}=a(c,p),f=e.deleteFrom(u(c));m&&(f=f.where(g=>g.and(m.map(b=>b(g))))),l&&(f=f.where(g=>g.or(l.map(b=>b(g))))),await f.execute()},async deleteMany(d){let{model:c,where:p}=d,{and:m,or:l}=a(c,p),f=e.deleteFrom(u(c));return m&&(f=f.where(g=>g.and(m.map(b=>b(g))))),l&&(f=f.where(g=>g.or(l.map(b=>b(g))))),(await f.execute()).length},options:t}};var Xn=e=>{let t=X(e);function r(n,o){return o==="id"?o:t[n].fields[o].fieldName||o}return{transformInput(n,o,i){let a=i==="update"?{}:{id:e.advanced?.generateId?e.advanced.generateId({model:o}):n.id||H()},u=t[o].fields;for(let s in u){let d=n[s];d===void 0&&!u[s].defaultValue||(a[u[s].fieldName||s]=Fe(d,u[s],i))}return a},transformOutput(n,o,i=[]){if(!n)return null;let a=n.id||n._id?i.length===0||i.includes("id")?{id:n.id}:{}:{},u=t[o].fields;for(let s in u){if(i.length&&!i.includes(s))continue;let d=u[s];d&&(a[s]=n[d.fieldName||s])}return a},convertWhereClause(n,o,i){return o.filter(a=>n.every(u=>{let{field:s,value:d,operator:c}=u,p=r(i,s);if(c==="in"){if(!Array.isArray(d))throw new Error("Value must be an array");return d.includes(a[p])}else return c==="contains"?a[p].includes(d):c==="starts_with"?a[p].startsWith(d):c==="ends_with"?a[p].endsWith(d):a[p]===d}))},getField:r}},zr=e=>t=>{let{transformInput:r,transformOutput:n,convertWhereClause:o,getField:i}=Xn(t);return{id:"memory",create:async({model:a,data:u})=>{let s=r(u,a,"create");return e[a].push(s),n(s,a)},findOne:async({model:a,where:u,select:s})=>{let d=e[a],p=o(u,d,a)[0]||null;return n(p,a,s)},findMany:async({model:a,where:u,sortBy:s,limit:d,offset:c})=>{let p=e[a];return u&&(p=o(u,p,a)),s&&(p=p.sort((m,l)=>{let f=i(a,s.field);return s.direction==="asc"?m[f]>l[f]?1:-1:m[f]<l[f]?1:-1})),c!==void 0&&(p=p.slice(c)),d!==void 0&&(p=p.slice(0,d)),p.map(m=>n(m,a))},update:async({model:a,where:u,update:s})=>{let d=e[a],c=o(u,d,a);return c.forEach(p=>{Object.assign(p,r(s,a,"update"))}),n(c[0],a)},delete:async({model:a,where:u})=>{let s=e[a],d=o(u,s,a);e[a]=s.filter(c=>!d.includes(c))},deleteMany:async({model:a,where:u})=>{let s=e[a],d=o(u,s,a),c=0;return e[a]=s.filter(p=>d.includes(p)?(c++,!1):!d.includes(p)),c},updateMany(a){let{model:u,where:s,update:d}=a,c=e[u],p=o(s,c,u);return p.forEach(m=>{Object.assign(m,d)}),p[0]||null}}};async function Hr(e){if(!e.database){let n=X(e),o=Object.keys(n).reduce((i,a)=>(i[a]=[],i),{});return N.warn("No database configuration provided. Using memory adapter in development"),zr(o)(e)}if(typeof e.database=="function")return e.database(e);let{kysely:t,databaseType:r}=await dt(e);if(!t)throw new B("Failed to initialize database adapter");return Mr(t,{type:r||"sqlite"})(e)}var ct="better-auth-secret-123456789";var ut=require("better-call");async function Wr(e,t){let n=(await t.context.internalAdapter.findAccounts(e))?.find(a=>a.providerId==="credential"),o=n?.password;if(!n||!o||!t.body.password)throw new ut.APIError("BAD_REQUEST",{message:"No password credential found"});if(!await t.context.password.verify({hash:o,password:t.body.password}))throw new ut.APIError("BAD_REQUEST",{message:"Invalid password"});return!0}var Kr=async e=>{let t=await Hr(e),r=e.plugins||[],n=to(e),o=Te(e.logger),i=be(e.baseURL,e.basePath),a=e.secret||j.BETTER_AUTH_SECRET||j.AUTH_SECRET||ct;a===ct&&we&&o.error("You are using the default secret. Please set `BETTER_AUTH_SECRET` in your environment variables or pass `secret` in your auth config."),e={...e,secret:a,baseURL:i?new URL(i).origin:"",basePath:e.basePath||"/api/auth",plugins:r.concat(n),emailAndPassword:{...e.emailAndPassword,enabled:e.emailAndPassword?.enabled??!1,autoSignIn:e.emailAndPassword?.autoSignIn??!0}};let u=He(e),s=X(e),d=Object.keys(e.socialProviders||{}).map(l=>{let f=e.socialProviders?.[l];return f.enabled===!1?null:(f.clientId||o.warn(`Social provider ${l} is missing clientId or clientSecret`),Ye[l](f))}).filter(l=>l!==null),c=({model:l,size:f})=>typeof e?.advanced?.generateId=="function"?e.advanced.generateId({model:l,size:f}):H(f),p={appName:e.appName||"Better Auth",socialProviders:d,options:e,tables:s,trustedOrigins:ro(e),baseURL:i||"",sessionConfig:{updateAge:e.session?.updateAge!==void 0?e.session.updateAge:24*60*60,expiresIn:e.session?.expiresIn||60*60*24*7,freshAge:e.session?.freshAge===void 0?60*60*24:e.session.freshAge},secret:a,rateLimit:{...e.rateLimit,enabled:e.rateLimit?.enabled??we,window:e.rateLimit?.window||10,max:e.rateLimit?.max||100,storage:e.rateLimit?.storage||(e.secondaryStorage?"secondary-storage":"memory")},authCookies:u,logger:o,generateId:c,session:null,secondaryStorage:e.secondaryStorage,password:{hash:e.emailAndPassword?.password?.hash||Nt,verify:e.emailAndPassword?.password?.verify||Bt,config:{minPasswordLength:e.emailAndPassword?.minPasswordLength||8,maxPasswordLength:e.emailAndPassword?.maxPasswordLength||128},checkPassword:Wr},setNewSession(l){this.newSession=l},newSession:null,adapter:t,internalAdapter:at(t,{options:e,hooks:e.databaseHooks?[e.databaseHooks]:[],generateId:c}),createAuthCookie:_e(e)},{context:m}=eo(p);return m};function eo(e){let t=e.options,r=t.plugins||[],n=e,o=[];for(let i of r)if(i.init){let a=i.init(e);typeof a=="object"&&(a.options&&(a.options.databaseHooks&&o.push(a.options.databaseHooks),t=(0,Gr.defu)(t,a.options)),a.context&&(n={...n,...a.context}))}return o.push(t.databaseHooks),n.internalAdapter=at(e.adapter,{options:t,hooks:o.filter(i=>i!==void 0),generateId:e.generateId}),n.options=t,{context:n}}function to(e){let t=[];return e.advanced?.crossSubDomainCookies?.enabled,t}function ro(e){let t=be(e.baseURL,e.basePath);if(!t)return[];let r=[new URL(t).origin];e.trustedOrigins&&r.push(...e.trustedOrigins);let n=j.BETTER_AUTH_TRUSTED_ORIGINS;return n&&r.push(...n.split(",")),r}var no=e=>{let t=Kr(e),{api:r}=st(t,e),n=e.plugins?.reduce((o,i)=>i.$ERROR_CODES?{...o,...i.$ERROR_CODES}:o,{});return{handler:async o=>{let i=await t,a=i.options.basePath||"/api/auth",u=new URL(o.url);if(!i.options.baseURL){let d=be(void 0,a)||`${u.origin}${a}`;i.options.baseURL=d,i.baseURL=d}i.trustedOrigins=[...e.trustedOrigins||[],i.baseURL,u.origin];let{handler:s}=qr(i,e);return s(o)},api:r,options:e,$context:t,$Infer:{},$ERROR_CODES:{...n,...w}}};0&&(module.exports={BetterAuthError,HIDE_METADATA,MissingDependencyError,betterAuth,capitalizeFirstLetter,createCookieGetter,createLogger,deleteSessionCookie,generateId,generateState,getCookies,levels,logger,parseCookies,parseSetCookieHeader,parseState,setCookieCache,setSessionCookie,shouldPublishLog});
